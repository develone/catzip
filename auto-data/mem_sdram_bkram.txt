################################################################################
##
## Filename: 	mem_flash_sdram.txt
##
## Project:	ICO Zip, iCE40 ZipCPU demonstration project
##
## Purpose:	Describes a memory model containing the flash, sdram, and
##		block RAM.  This will be used to create a board.ld linker script
##	that can be used to link ZipCPU programs.
##
##
## Creator:	Dan Gisselquist, Ph.D.
##		Gisselquist Technology, LLC
##
################################################################################
##
## Copyright (C) 2019-2020, Gisselquist Technology, LLC
##
## This program is free software (firmware): you can redistribute it and/or
## modify it under the terms of  the GNU General Public License as published
## by the Free Software Foundation, either version 3 of the License, or (at
## your option) any later version.
##
## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTIBILITY or
## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
## for more details.
##
## You should have received a copy of the GNU General Public License along
## with this program.  (It's in the $(ROOT)/doc directory.  Run make with no
## target there if the PDF file isn't present.)  If not, see
## <http://www.gnu.org/licenses/> for a copy.
##
## License:	GPL, v3, as defined and found on www.gnu.org,
##		http://www.gnu.org/licenses/gpl.html
##
##
################################################################################
##
##
##
@PREFIX=mem_sdram_bkram
@MASTER.TYPE=SCRIPT
@MASTER.BUS=wb
@LD.FILE=board.ld
@LD.DEFNS=
/* LD.DEFNS from zipbones.txt */
_kram  = ORIGIN(bkram); /* Can be used for high-speed kernel RAM */
_ram   = ORIGIN(sdram);
_rom   = 0;	/* Disable the flash */
_top_of_stack = ORIGIN(sdram) + LENGTH(sdram);

@LD.SCRIPT=
/* LD.SCRIPT from @$(PREFIX).txt */
SECTIONS
{
	.rocode ORIGIN(sdram) : ALIGN(4) {
		_boot_address = .;
		*(.start) *(.boot)
                _kram_start = . ;
		*(.kernel)
                _kram_end = . ;
		_ram_image_start = . ;
		*(.text.startup)
		*(.text*)
		*(.rodata*) *(.strings)
		*(.data) *(COMMON)
                _ram_image_end = . ;
		*(.bss)
		_bss_image_end = . ;
		} > sdram
       _top_of_heap = .;
}
#
