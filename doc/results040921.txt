Testing icozip.


devel@mypi3-16:~/testbuilds/icozip/sim/verilated $ ./arm-main_tb 
Listening on port 8363
Listening on port 8364
Running CPU self-test
-----------------------------------
SIM Instructions                Is this a simulator?
CIS Instructions                Supported
Break test #1                   Pass
Break test #2                   Pass
Break test #3                   Pass
Early Branch test               Pass
Trap test/AND                   Pass
Trap test/CLR                   Pass
Overflow test                   Pass
Carry test                      Pass
Loop test                       Pass
Shift test                      Pass
Pipeline test                   Pass
Mem-Pipeline test               Pass
Conditional Execution test      Pass
No-waiting pipeline test        Pass
Conditional Branching test      Pass
Ill Instruction test, NULL PC   Pass
Ill Instruction test, two       Pass
Comparison test, ==             Pass
Comparison test, !=             Pass
CC Register test                Pass
Multi-Arg test                  Pass
Multiply test                   Pass


devel@mypi3-16:~/testbuilds/icozip/sw/host $ ./arm-zipload -v ../board/cputest
Halting the CPU
Memory regions:
	Block RAM: 00c00000 - 00c02000
	Flash (ROM): 01000000 - 02000000
	SRAM       : 00e00000 - 00e20000
Loading: ../board/cputest
Section 0: 00e00000 - 00e03ddc
Writing to MEM: 00e00000-00e03ddc
Clearing the CPUs registers
Setting PC to 00e00000
The CPU should be fully loaded, you may now
start it (from reset/reboot) with:
> wbregs cpu 0x0f

CPU Status is: 0000060f
devel@mypi3-16:~/testbuilds/icozip/sw/host $ ./arm-wbregs cpu 0x0f
02000000 (     CPU)-> 0000000f

devel@mypi3-16:~/testbuilds/catzip-newautofpga/catzip $ 

ata/mem_sram_only.txt auto-data/mem_sdram_only.txt
3c3
< ## Filename: 	mem_flash_sram.txt
---
> ## Filename: 	mem_flash_sdram.txt
7c7
< ## Purpose:	Describes a memory model containing the flash, SRAM, and
---
> ## Purpose:	Describes a memory model containing the flash, sdram, and
42c42
< @PREFIX=mem_sram_only
---
> @PREFIX=mem_sdram_only
45c45
< @LD.FILE=sram_only.ld
---
> @LD.FILE=sdram_only.ld
49c49
< _ram   = ORIGIN(sram);
---
> _ram   = ORIGIN(sdram);
51c51
< _top_of_stack = ORIGIN(sram) + LENGTH(sram);
---
> _top_of_stack = ORIGIN(sdram) + LENGTH(sdram);
57c57
< 	.rocode ORIGIN(sram) : ALIGN(4) {
---
> 	.rocode ORIGIN(sdram) : ALIGN(4) {
71c71
< 		} > sram
---
> 		} > sdram
