
jpeg:     file format elf32-zip


Disassembly of section .rocode:

02000000 <_boot_address>:
 2000000:	6a 00 00 c0 	LDI        0x03000000,SP  // 3000000 <_top_of_stack>
 2000004:	6a 40 00 00 
 2000008:	7b 47 c0 09 	MOV        $36+PC,uPC
 200000c:	0e 00 00 00 	CLR        R1
 2000010:	13 43 c0 09 	MOV        0x02000038,R2  // 2000038 <_argv>
 2000014:	1a 00 10 40 	LDI        0x020822d4,R3  // 20822d4 <__env>
 2000018:	1a 40 22 d4 
 200001c:	87 fa fc f8 	JSR        0x02000044     // 2000044 <main>
 2000020:	02 00 00 44 

02000024 <_graceful_kernel_exit>:
 2000024:	87 fa fc f8 	JSR        0x020017a8     // 20017a8 <exit>
 2000028:	02 00 17 a8 

0200002c <_hw_shutdown>:
 200002c:	7f c0 03 01 	NEXIT      R1

02000030 <_kernel_is_dead>:
 2000030:	70 c0 00 10 	HALT
 2000034:	78 83 ff f8 	BRA        @0x02000030    // 2000030 <_kernel_is_dead>

02000038 <_argv>:
	...

02000040 <__define_the_top_of_the_stack__>:
 2000040:	7b 40 00 00 	RTN

02000044 <main>:
 2000044:	e8 0c 85 00 	SUB        $12,SP         | SW         R0,(SP)
 2000048:	ad 04 b5 08 	SW         R5,$4(SP)      | SW         R6,$8(SP)
 200004c:	2a 00 00 40 	LDI        0x0200225c,R5  // 200225c <ptrs>
 2000050:	2a 40 22 5c 
 2000054:	06 00 01 00 	LDI        $256,R0
 2000058:	04 c5 40 00 	SW         R0,(R5)
 200005c:	04 c5 40 04 	SW         R0,$4(R5)
 2000060:	32 00 02 80 	LDI        0x01401000,R6  // 1401000 <_bkram+0x1000>
 2000064:	32 40 10 00 
 2000068:	34 c5 40 14 	SW         R6,$20(R5)
 200006c:	03 41 80 04 	MOV        $4+R6,R0
 2000070:	04 c5 40 18 	SW         R0,$24(R5)
 2000074:	32 40 10 08 	LDILO      $4104,R6
 2000078:	34 c5 40 1c 	SW         R6,$28(R5)
 200007c:	0e 08 00 00 	LDI        $524288,R1
 2000080:	87 fa fc f8 	JSR        0x02000448     // 2000448 <malloc>
 2000084:	02 00 04 48 
 2000088:	13 40 40 00 	MOV        R1,R2
 200008c:	0c c5 40 20 	SW         R1,$32(R5)
 2000090:	0a 00 02 80 	LDI        0x01401000,R1  // 1401000 <_bkram+0x1000>
 2000094:	0a 40 10 00 
 2000098:	0c 84 40 00 	LW         (R1),R1
 200009c:	0c c5 40 28 	SW         R1,$40(R5)
 20000a0:	0a 00 02 80 	LDI        0x01401004,R1  // 1401004 <_bkram+0x1004>
 20000a4:	0a 40 10 04 
 20000a8:	24 84 40 00 	LW         (R1),R4
 20000ac:	24 c5 40 24 	SW         R4,$36(R5)
 20000b0:	8f b0 84 b0 	MOV        R6,R1          | LW         (R6),R0
 20000b4:	04 c5 40 2c 	SW         R0,$44(R5)
 20000b8:	1e 04 00 00 	LDI        $262144,R3
 20000bc:	b7 90 b2 98 	MOV        R2,R6          | ADD        R3,R6
 20000c0:	1b 41 80 00 	MOV        R6,R3
 20000c4:	34 c5 40 08 	SW         R6,$8(R5)
 20000c8:	04 00 00 02 	CMP        $2,R0
 20000cc:	78 a8 00 04 	BNZ        @0x020000d4    // 20000d4 <main+0x90>
 20000d0:	78 80 00 1c 	BRA        @0x020000f0    // 20000f0 <main+0xac>
 20000d4:	0e 00 01 00 	LDI        $256,R1
 20000d8:	87 fa fc f8 	JSR        0x020003d0     // 20003d0 <lifting>
 20000dc:	02 00 03 d0 
 20000e0:	0c 85 40 28 	LW         40(R5),R1
 20000e4:	0c 00 00 01 	CMP        $1,R1
 20000e8:	78 88 00 18 	BZ         @0x02000104    // 2000104 <main+0xc0>
 20000ec:	78 80 00 24 	BRA        @0x02000114    // 2000114 <main+0xd0>
 20000f0:	04 84 40 00 	LW         (R1),R0
 20000f4:	04 c5 40 2c 	SW         R0,$44(R5)
 20000f8:	04 00 00 02 	CMP        $2,R0
 20000fc:	78 8b ff f0 	BZ         @0x020000f0    // 20000f0 <main+0xac>
 2000100:	78 83 ff d0 	BRA        @0x020000d4    // 20000d4 <main+0x90>
 2000104:	0c 85 40 1c 	LW         28(R5),R1
 2000108:	04 84 40 00 	LW         (R1),R0
 200010c:	04 c5 40 2c 	SW         R0,$44(R5)
 2000110:	78 83 ff f4 	BRA        @0x02000108    // 2000108 <main+0xc4>
 2000114:	0c 85 40 20 	LW         32(R5),R1
 2000118:	87 fa fc f8 	JSR        0x02000468     // 2000468 <free>
 200011c:	02 00 04 68 
 2000120:	78 83 ff fc 	BUSY

02000124 <singlelift>:
 2000124:	14 00 00 01 	CMP        $1,R2
 2000128:	78 90 01 38 	BLT        @0x02000264    // 2000264 <singlelift+0x140>
 200012c:	78 80 01 38 	BRA        @0x02000268    // 2000268 <singlelift+0x144>
 2000130:	e8 38 ad 18 	SUB        $56,SP         | SW         R5,$24(SP)
 2000134:	b5 1c bd 20 	SW         R6,$28(SP)     | SW         R7,$32(SP)
 2000138:	c5 24 cd 28 	SW         R8,$36(SP)     | SW         R9,$40(SP)
 200013c:	d5 2c dd 30 	SW         R10,$44(SP)    | SW         R11,$48(SP)
 2000140:	e5 34 b7 90 	SW         R12,$52(SP)    | MOV        R2,R6
 2000144:	33 04 40 00 	MPY        R1,R6
 2000148:	2b 41 80 00 	MOV        R6,R5
 200014c:	29 40 00 1f 	LSR        $31,R5
 2000150:	28 85 80 00 	ADD        R6,R5
 2000154:	29 c0 00 01 	ASR        $1,R5
 2000158:	29 80 00 02 	LSL        $2,R5
 200015c:	ad 14 cf 88 	SW         R5,$20(SP)     | MOV        R1,R9
 2000160:	49 80 00 02 	LSL        $2,R9
 2000164:	0b 40 80 00 	MOV        R2,R1
 2000168:	09 c0 00 01 	ASR        $1,R1
 200016c:	8d 0c e7 a0 	SW         R1,$12(SP)     | MOV        R4,R12
 2000170:	a2 a8 a5 04 	ADD        R5,R4          | SW         R4,$4(SP)
 2000174:	08 83 ff fe 	ADD        $-2,R1
 2000178:	0b 06 40 00 	MPY        R9,R1
 200017c:	df e0 da 88 	MOV        R12,R11        | ADD        R1,R11
 2000180:	dd 08 df 98 	SW         R11,$8(SP)     | MOV        R3,R11
 2000184:	58 80 00 10 	ADD        $16,R11
 2000188:	11 80 00 02 	LSL        $2,R2
 200018c:	8f e0 8a 90 	MOV        R12,R1         | ADD        R2,R1
 2000190:	8d 10 d4 0c 	SW         R1,$16(SP)     | LW         12(SP),R10
 2000194:	50 83 ff ff 	ADD        $-1,R10
 2000198:	af e0 a4 04 	MOV        R12,R5         | LW         4(SP),R4
 200019c:	14 86 ff f0 	LW         -16(R11),R2
 20001a0:	1c 86 ff f4 	LW         -12(R11),R3
 20001a4:	3c 86 ff f8 	LW         -8(R11),R7
 20001a8:	b4 dc 90 98 	LW         -4(R11),R6     | SUB        R3,R2
 20001ac:	8f 98 8a b0 	MOV        R3,R1          | ADD        R6,R1
 20001b0:	09 c0 00 01 	ASR        $1,R1
 20001b4:	b8 88 8f b8 	SUB        R1,R7          | MOV        R7,R1
 20001b8:	95 e0 92 b8 	SW         R2,(R12)       | ADD        R7,R2
 20001bc:	10 80 00 02 	ADD        $2,R2
 20001c0:	11 c0 00 02 	ASR        $2,R2
 20001c4:	92 98 95 a0 	ADD        R3,R2          | SW         R2,(R4)
 20001c8:	94 0c 93 03 	LW         12(SP),R2      | CMP        $3,R2
 20001cc:	78 90 00 50 	BLT        @0x02000220    // 2000220 <singlelift+0xfc>
 20001d0:	97 d8 c6 01 	MOV        R11,R2         | LDI        $1,R8
 20001d4:	5c c7 40 00 	SW         R11,(SP)
 20001d8:	aa c8 a2 c8 	ADD        R9,R5          | ADD        R9,R4
 20001dc:	3c 84 80 04 	LW         4(R2),R7
 20001e0:	9f b8 9a b0 	MOV        R7,R3          | ADD        R6,R3
 20001e4:	19 c0 00 01 	ASR        $1,R3
 20001e8:	dc 90 d8 98 	LW         (R2),R11       | SUB        R3,R11
 20001ec:	9f d8 8d a8 	MOV        R11,R3         | SW         R1,(R5)
 20001f0:	da 88 8f d8 	ADD        R1,R11         | MOV        R11,R1
 20001f4:	08 80 00 02 	ADD        $2,R1
 20001f8:	09 c0 00 02 	ASR        $2,R1
 20001fc:	8a b0 8d a0 	ADD        R6,R1          | SW         R1,(R4)
 2000200:	92 08 c2 01 	ADD        $8,R2          | ADD        $1,R8
 2000204:	8f 98 b7 b8 	MOV        R3,R1          | MOV        R7,R6
 2000208:	44 06 80 00 	CMP        R10,R8
 200020c:	78 ab ff c8 	BNZ        @0x020001d8    // 20001d8 <singlelift+0xb4>
 2000210:	dc 00 ac 08 	LW         (SP),R11       | LW         8(SP),R5
 2000214:	a7 a8 8c 14 	MOV        R5,R4          | LW         20(SP),R1
 2000218:	a2 88 94 04 	ADD        R1,R4          | LW         4(SP),R2
 200021c:	78 80 00 08 	BRA        @0x02000228    // 2000228 <singlelift+0x104>
 2000220:	bf b0 9f 88 	MOV        R6,R7          | MOV        R1,R3
 2000224:	13 41 00 00 	MOV        R4,R2
 2000228:	aa c8 9d a8 	ADD        R9,R5          | SW         R3,(R5)
 200022c:	a2 c8 9a 01 	ADD        R9,R4          | ADD        $1,R3
 2000230:	19 c0 00 03 	ASR        $3,R3
 2000234:	9a b8 9d a0 	ADD        R7,R3          | SW         R3,(R4)
 2000238:	e2 04 92 04 	ADD        $4,R12         | ADD        $4,R2
 200023c:	95 04 9c 08 	SW         R2,$4(SP)      | LW         8(SP),R3
 2000240:	9a 04 9d 08 	ADD        $4,R3          | SW         R3,$8(SP)
 2000244:	da c8 a4 10 	ADD        R9,R11         | LW         16(SP),R4
 2000248:	24 07 00 00 	CMP        R12,R4
 200024c:	78 ab ff 48 	BNZ        @0x02000198    // 2000198 <singlelift+0x74>
 2000250:	ac 18 b4 1c 	LW         24(SP),R5      | LW         28(SP),R6
 2000254:	bc 20 c4 24 	LW         32(SP),R7      | LW         36(SP),R8
 2000258:	cc 28 d4 2c 	LW         40(SP),R9      | LW         44(SP),R10
 200025c:	dc 30 e4 34 	LW         48(SP),R11     | LW         52(SP),R12
 2000260:	ea 38 ff 80 	ADD        $56,SP         | RTN
 2000264:	7b 40 00 00 	RTN
 2000268:	78 83 fe c4 	BRA        @0x02000130    // 2000130 <singlelift+0xc>

0200026c <ilift>:
 200026c:	14 00 00 01 	CMP        $1,R2
 2000270:	78 90 01 54 	BLT        @0x020003c8    // 20003c8 <ilift+0x15c>
 2000274:	78 80 01 54 	BRA        @0x020003cc    // 20003cc <ilift+0x160>
 2000278:	e8 3c ad 1c 	SUB        $60,SP         | SW         R5,$28(SP)
 200027c:	b5 20 bd 24 	SW         R6,$32(SP)     | SW         R7,$36(SP)
 2000280:	c5 28 cd 2c 	SW         R8,$40(SP)     | SW         R9,$44(SP)
 2000284:	d5 30 dd 34 	SW         R10,$48(SP)    | SW         R11,$52(SP)
 2000288:	e5 38 b7 90 	SW         R12,$56(SP)    | MOV        R2,R6
 200028c:	33 04 40 00 	MPY        R1,R6
 2000290:	2b 41 80 00 	MOV        R6,R5
 2000294:	29 40 00 1f 	LSR        $31,R5
 2000298:	28 85 80 00 	ADD        R6,R5
 200029c:	29 c0 00 01 	ASR        $1,R5
 20002a0:	29 80 00 02 	LSL        $2,R5
 20002a4:	53 40 40 00 	MOV        R1,R10
 20002a8:	51 80 00 02 	LSL        $2,R10
 20002ac:	0b 40 80 00 	MOV        R2,R1
 20002b0:	09 c0 00 01 	ASR        $1,R1
 20002b4:	8d 0c 9d 04 	SW         R1,$12(SP)     | SW         R3,$4(SP)
 20002b8:	cf 98 ca d0 	MOV        R3,R9          | ADD        R10,R9
 20002bc:	cd 00 8f 98 	SW         R9,(SP)        | MOV        R3,R1
 20002c0:	8a a8 8d 08 	ADD        R5,R1          | SW         R1,$8(SP)
 20002c4:	63 41 00 00 	MOV        R4,R12
 20002c8:	11 80 00 02 	LSL        $2,R2
 20002cc:	cf 98 ca 90 	MOV        R3,R9          | ADD        R2,R9
 20002d0:	cd 10 8c 0c 	SW         R9,$16(SP)     | LW         12(SP),R1
 20002d4:	09 80 00 03 	LSL        $3,R1
 20002d8:	0b 40 5f f0 	MOV        $-16+R1,R1
 20002dc:	8d 18 8c 0c 	SW         R1,$24(SP)     | LW         12(SP),R1
 20002e0:	08 83 ff fe 	ADD        $-2,R1
 20002e4:	0b 06 80 00 	MPY        R10,R1
 20002e8:	8a a8 88 d0 	ADD        R5,R1          | SUB        R10,R1
 20002ec:	8d 14 dc 0c 	SW         R1,$20(SP)     | LW         12(SP),R11
 20002f0:	58 83 ff ff 	ADD        $-1,R11
 20002f4:	9f e0 a4 08 	MOV        R12,R3         | LW         8(SP),R4
 20002f8:	8c 04 ac 88 	LW         4(SP),R1       | LW         (R1),R5
 20002fc:	bc 00 b4 b8 	LW         (SP),R7        | LW         (R7),R6
 2000300:	8f a8 8a b0 	MOV        R5,R1          | ADD        R6,R1
 2000304:	08 80 00 02 	ADD        $2,R1
 2000308:	09 c0 00 02 	ASR        $2,R1
 200030c:	94 a0 90 88 	LW         (R4),R2        | SUB        R1,R2
 2000310:	aa 90 ad e0 	ADD        R2,R5          | SW         R5,(R12)
 2000314:	14 c7 00 04 	SW         R2,$4(R12)
 2000318:	cc 0c af b0 	LW         12(SP),R9      | MOV        R6,R5
 200031c:	4c 00 00 03 	CMP        $3,R9
 2000320:	78 90 00 50 	BLT        @0x02000374    // 2000374 <ilift+0x108>
 2000324:	c7 90 ce 01 	MOV        R2,R8          | LDI        $1,R9
 2000328:	78 80 00 04 	BRA        @0x02000330    // 2000330 <ilift+0xc4>
 200032c:	43 40 80 00 	MOV        R2,R8
 2000330:	9a 08 ba d0 	ADD        $8,R3          | ADD        R10,R7
 2000334:	a2 d0 ac b8 	ADD        R10,R4         | LW         (R7),R5
 2000338:	8f a8 8a b0 	MOV        R5,R1          | ADD        R6,R1
 200033c:	08 80 00 02 	ADD        $2,R1
 2000340:	09 c0 00 02 	ASR        $2,R1
 2000344:	94 a0 90 88 	LW         (R4),R2        | SUB        R1,R2
 2000348:	8f 90 8a c0 	MOV        R2,R1          | ADD        R8,R1
 200034c:	09 c0 00 01 	ASR        $1,R1
 2000350:	8a b0 8d 98 	ADD        R6,R1          | SW         R1,(R3)
 2000354:	14 c4 c0 04 	SW         R2,$4(R3)
 2000358:	ca 01 b7 a8 	ADD        $1,R9          | MOV        R5,R6
 200035c:	4c 06 c0 00 	CMP        R11,R9
 2000360:	78 ab ff c8 	BNZ        @0x0200032c    // 200032c <ilift+0xc0>
 2000364:	9f e0 8c 18 	MOV        R12,R3         | LW         24(SP),R1
 2000368:	9a 88 a4 14 	ADD        R1,R3          | LW         20(SP),R4
 200036c:	94 00 a2 90 	LW         (SP),R2        | ADD        R2,R4
 2000370:	78 80 00 00 	BRA        @0x02000374    // 2000374 <ilift+0x108>
 2000374:	a2 d0 8f a8 	ADD        R10,R4         | MOV        R5,R1
 2000378:	08 80 00 01 	ADD        $1,R1
 200037c:	09 c0 00 03 	ASR        $3,R1
 2000380:	94 a0 90 88 	LW         (R4),R2        | SUB        R1,R2
 2000384:	8f 90 8a c0 	MOV        R2,R1          | ADD        R8,R1
 2000388:	09 c0 00 01 	ASR        $1,R1
 200038c:	08 85 40 00 	ADD        R5,R1
 2000390:	0c c4 c0 08 	SW         R1,$8(R3)
 2000394:	14 c4 c0 0c 	SW         R2,$12(R3)
 2000398:	cc 04 ca 04 	LW         4(SP),R9       | ADD        $4,R9
 200039c:	cd 04 8c 00 	SW         R9,$4(SP)      | LW         (SP),R1
 20003a0:	8a 04 8d 00 	ADD        $4,R1          | SW         R1,(SP)
 20003a4:	94 08 92 04 	LW         8(SP),R2       | ADD        $4,R2
 20003a8:	95 08 e2 d0 	SW         R2,$8(SP)      | ADD        R10,R12
 20003ac:	8c 10 8b c8 	LW         16(SP),R1      | CMP        R9,R1
 20003b0:	78 ab ff 40 	BNZ        @0x020002f4    // 20002f4 <ilift+0x88>
 20003b4:	ac 1c b4 20 	LW         28(SP),R5      | LW         32(SP),R6
 20003b8:	bc 24 c4 28 	LW         36(SP),R7      | LW         40(SP),R8
 20003bc:	cc 2c d4 30 	LW         44(SP),R9      | LW         48(SP),R10
 20003c0:	dc 34 e4 38 	LW         52(SP),R11     | LW         56(SP),R12
 20003c4:	ea 3c ff 80 	ADD        $60,SP         | RTN
 20003c8:	7b 40 00 00 	RTN
 20003cc:	78 83 fe a8 	BRA        @0x02000278    // 2000278 <ilift+0xc>

020003d0 <lifting>:
 20003d0:	e8 14 85 00 	SUB        $20,SP         | SW         R0,(SP)
 20003d4:	ad 04 b5 08 	SW         R5,$4(SP)      | SW         R6,$8(SP)
 20003d8:	bd 0c c5 10 	SW         R7,$12(SP)     | SW         R8,$16(SP)
 20003dc:	af 88 bf 90 	MOV        R1,R5          | MOV        R2,R7
 20003e0:	b7 98 c7 a0 	MOV        R3,R6          | MOV        R4,R8
 20003e4:	a7 98 9f 90 	MOV        R3,R4          | MOV        R2,R3
 20003e8:	13 40 40 00 	MOV        R1,R2
 20003ec:	87 fa fc f8 	JSR        0x02000124     // 2000124 <singlelift>
 20003f0:	02 00 01 24 
 20003f4:	a7 b8 9f b0 	MOV        R7,R4          | MOV        R6,R3
 20003f8:	97 a8 8f a8 	MOV        R5,R2          | MOV        R5,R1
 20003fc:	87 fa fc f8 	JSR        0x02000124     // 2000124 <singlelift>
 2000400:	02 00 01 24 
 2000404:	8c c0 8b 00 	LW         (R8),R1        | CMP        $0,R1
 2000408:	78 a8 00 2c 	BNZ        @0x02000438    // 2000438 <lifting+0x68>
 200040c:	c7 a8 c1 7e 	MOV        R5,R8          | AND        $-2,R8
 2000410:	a7 b0 9f b8 	MOV        R6,R4          | MOV        R7,R3
 2000414:	97 c0 8f a8 	MOV        R8,R2          | MOV        R5,R1
 2000418:	87 fa fc f8 	JSR        0x0200026c     // 200026c <ilift>
 200041c:	02 00 02 6c 
 2000420:	a7 b8 9f b0 	MOV        R7,R4          | MOV        R6,R3
 2000424:	97 c0 8f a8 	MOV        R8,R2          | MOV        R5,R1
 2000428:	84 00 ac 04 	LW         (SP),R0        | LW         4(SP),R5
 200042c:	b4 08 bc 0c 	LW         8(SP),R6       | LW         12(SP),R7
 2000430:	c4 10 ea 14 	LW         16(SP),R8      | ADD        $20,SP
 2000434:	78 83 fe 34 	BRA        @0x0200026c    // 200026c <ilift>
 2000438:	84 00 ac 04 	LW         (SP),R0        | LW         4(SP),R5
 200043c:	b4 08 bc 0c 	LW         8(SP),R6       | LW         12(SP),R7
 2000440:	c4 10 ea 14 	LW         16(SP),R8      | ADD        $20,SP
 2000444:	7b 40 00 00 	RTN

02000448 <malloc>:
 2000448:	e8 04 85 00 	SUB        $4,SP          | SW         R0,(SP)
 200044c:	13 40 40 00 	MOV        R1,R2
 2000450:	0a 00 00 40 	LDI        0x02001e20,R1  // 2001e20 <_impure_ptr>
 2000454:	0a 40 1e 20 
 2000458:	8c 88 84 00 	LW         (R1),R1        | LW         (SP),R0
 200045c:	68 80 00 04 	ADD        $4,SP
 2000460:	7c 87 c0 00 	LJMP       @0x02000488    // 2000488 <_malloc_r>
 2000464:	02 00 04 88 

02000468 <free>:
 2000468:	e8 04 85 00 	SUB        $4,SP          | SW         R0,(SP)
 200046c:	13 40 40 00 	MOV        R1,R2
 2000470:	0a 00 00 40 	LDI        0x02001e20,R1  // 2001e20 <_impure_ptr>
 2000474:	0a 40 1e 20 
 2000478:	8c 88 84 00 	LW         (R1),R1        | LW         (SP),R0
 200047c:	68 80 00 04 	ADD        $4,SP
 2000480:	7c 87 c0 00 	LJMP       @0x02000fc4    // 2000fc4 <_free_r>
 2000484:	02 00 0f c4 

02000488 <_malloc_r>:
 2000488:	e8 3c 85 18 	SUB        $60,SP         | SW         R0,$24(SP)
 200048c:	ad 1c b5 20 	SW         R5,$28(SP)     | SW         R6,$32(SP)
 2000490:	bd 24 c5 28 	SW         R7,$36(SP)     | SW         R8,$40(SP)
 2000494:	cd 2c d5 30 	SW         R9,$44(SP)     | SW         R10,$48(SP)
 2000498:	dd 34 e5 38 	SW         R11,$52(SP)    | SW         R12,$56(SP)
 200049c:	e7 88 af 90 	MOV        R1,R12         | MOV        R2,R5
 20004a0:	aa 0b ab 17 	ADD        $11,R5         | CMP        $23,R5
 20004a4:	78 98 09 4c 	BC         @0x02000df4    // 2000df4 <_malloc_r+0x96c>
 20004a8:	a9 78 9f a8 	AND        $-8,R5         | MOV        R5,R3
 20004ac:	19 40 00 1f 	LSR        $31,R3
 20004b0:	ab 90 96 00 	CMP        R2,R5          | CLR        R2
 20004b4:	12 58 00 01 	LDILO.C    $1,R2
 20004b8:	10 c4 c0 00 	OR         R3,R2
 20004bc:	78 88 00 0c 	BZ         @0x020004cc    // 20004cc <_malloc_r+0x44>
 20004c0:	8e 0c 8d e0 	LDI        $12,R1         | SW         R1,(R12)
 20004c4:	0e 00 00 00 	CLR        R1
 20004c8:	78 80 09 5c 	BRA        @0x02000e28    // 2000e28 <_malloc_r+0x9a0>
 20004cc:	87 fa fc f8 	JSR        0x02000e40     // 2000e40 <__malloc_lock>
 20004d0:	02 00 0e 40 
 20004d4:	2c 00 01 f8 	CMP        $504,R5
 20004d8:	78 b8 00 70 	BNC        @0x0200054c    // 200054c <_malloc_r+0xc4>
 20004dc:	03 41 40 00 	MOV        R5,R0
 20004e0:	01 40 00 03 	LSR        $3,R0
 20004e4:	0b 41 40 08 	MOV        $8+R5,R1
 20004e8:	42 00 00 40 	LDI        0x02001a18,R8  // 2001a18 <__malloc_av_>
 20004ec:	42 40 1a 18 
 20004f0:	97 c0 92 88 	MOV        R8,R2          | ADD        R1,R2
 20004f4:	0b 40 80 00 	MOV        R2,R1
 20004f8:	4c 84 80 04 	LW         4(R2),R9
 20004fc:	92 78 cb 90 	ADD        $-8,R2         | CMP        R2,R9
 2000500:	78 a8 00 0c 	BNZ        @0x02000510    // 2000510 <_malloc_r+0x88>
 2000504:	4c 84 40 0c 	LW         12(R1),R9
 2000508:	82 02 8b c8 	ADD        $2,R0          | CMP        R9,R1
 200050c:	78 88 01 ac 	BZ         @0x020006bc    // 20006bc <_malloc_r+0x234>
 2000510:	04 86 40 04 	LW         4(R9),R0
 2000514:	00 43 ff fc 	AND        $-4,R0
 2000518:	0c 86 40 0c 	LW         12(R9),R1
 200051c:	14 86 40 08 	LW         8(R9),R2
 2000520:	0c c4 80 0c 	SW         R1,$12(R2)
 2000524:	14 c4 40 08 	SW         R2,$8(R1)
 2000528:	8f c8 8a 80 	MOV        R9,R1          | ADD        R0,R1
 200052c:	04 84 40 04 	LW         4(R1),R0
 2000530:	00 c0 00 01 	OR         $1,R0
 2000534:	04 c4 40 04 	SW         R0,$4(R1)
 2000538:	0b 43 00 00 	MOV        R12,R1
 200053c:	87 fa fc f8 	JSR        0x02000e44     // 2000e44 <__malloc_unlock>
 2000540:	02 00 0e 44 
 2000544:	8f c8 8a 08 	MOV        R9,R1          | ADD        $8,R1
 2000548:	78 80 08 dc 	BRA        @0x02000e28    // 2000e28 <_malloc_r+0x9a0>
 200054c:	03 41 40 00 	MOV        R5,R0
 2000550:	01 40 00 09 	LSR        $9,R0
 2000554:	78 88 00 b8 	BZ         @0x02000610    // 2000610 <_malloc_r+0x188>
 2000558:	04 00 00 05 	CMP        $5,R0
 200055c:	78 b8 00 18 	BNC        @0x02000578    // 2000578 <_malloc_r+0xf0>
 2000560:	03 41 40 00 	MOV        R5,R0
 2000564:	01 40 00 06 	LSR        $6,R0
 2000568:	9f 80 9a 38 	MOV        R0,R3          | ADD        $56,R3
 200056c:	82 39 8f 80 	ADD        $57,R0         | MOV        R0,R1
 2000570:	09 80 00 03 	LSL        $3,R1
 2000574:	78 80 00 ac 	BRA        @0x02000624    // 2000624 <_malloc_r+0x19c>
 2000578:	04 00 00 15 	CMP        $21,R0
 200057c:	78 b8 00 18 	BNC        @0x02000598    // 2000598 <_malloc_r+0x110>
 2000580:	1b 40 00 00 	MOV        R0,R3
 2000584:	18 80 00 5b 	ADD        $91,R3
 2000588:	00 80 00 5c 	ADD        $92,R0
 200058c:	0b 40 00 00 	MOV        R0,R1
 2000590:	09 80 00 03 	LSL        $3,R1
 2000594:	78 80 00 8c 	BRA        @0x02000624    // 2000624 <_malloc_r+0x19c>
 2000598:	04 00 00 55 	CMP        $85,R0
 200059c:	78 b8 00 20 	BNC        @0x020005c0    // 20005c0 <_malloc_r+0x138>
 20005a0:	03 41 40 00 	MOV        R5,R0
 20005a4:	01 40 00 0c 	LSR        $12,R0
 20005a8:	1b 40 00 00 	MOV        R0,R3
 20005ac:	18 80 00 6e 	ADD        $110,R3
 20005b0:	00 80 00 6f 	ADD        $111,R0
 20005b4:	0b 40 00 00 	MOV        R0,R1
 20005b8:	09 80 00 03 	LSL        $3,R1
 20005bc:	78 80 00 64 	BRA        @0x02000624    // 2000624 <_malloc_r+0x19c>
 20005c0:	04 00 01 55 	CMP        $341,R0
 20005c4:	78 b8 00 20 	BNC        @0x020005e8    // 20005e8 <_malloc_r+0x160>
 20005c8:	03 41 40 00 	MOV        R5,R0
 20005cc:	01 40 00 0f 	LSR        $15,R0
 20005d0:	1b 40 00 00 	MOV        R0,R3
 20005d4:	18 80 00 77 	ADD        $119,R3
 20005d8:	00 80 00 78 	ADD        $120,R0
 20005dc:	0b 40 00 00 	MOV        R0,R1
 20005e0:	09 80 00 03 	LSL        $3,R1
 20005e4:	78 80 00 3c 	BRA        @0x02000624    // 2000624 <_malloc_r+0x19c>
 20005e8:	04 00 05 55 	CMP        $1365,R0
 20005ec:	78 b8 00 2c 	BNC        @0x0200061c    // 200061c <_malloc_r+0x194>
 20005f0:	03 41 40 00 	MOV        R5,R0
 20005f4:	01 40 00 12 	LSR        $18,R0
 20005f8:	1b 40 00 00 	MOV        R0,R3
 20005fc:	18 80 00 7c 	ADD        $124,R3
 2000600:	00 80 00 7d 	ADD        $125,R0
 2000604:	0b 40 00 00 	MOV        R0,R1
 2000608:	09 80 00 03 	LSL        $3,R1
 200060c:	78 80 00 14 	BRA        @0x02000624    // 2000624 <_malloc_r+0x19c>
 2000610:	0e 00 02 00 	LDI        $512,R1
 2000614:	86 40 9e 3f 	LDI        $64,R0         | LDI        $63,R3
 2000618:	78 80 00 08 	BRA        @0x02000624    // 2000624 <_malloc_r+0x19c>
 200061c:	0e 00 03 f8 	LDI        $1016,R1
 2000620:	86 7f 9e 7e 	LDI        $127,R0        | LDI        $126,R3
 2000624:	42 00 00 40 	LDI        0x02001a18,R8  // 2001a18 <__malloc_av_>
 2000628:	42 40 1a 18 
 200062c:	a7 c0 a2 88 	MOV        R8,R4          | ADD        R1,R4
 2000630:	97 a0 92 78 	MOV        R4,R2          | ADD        $-8,R2
 2000634:	4c 85 00 04 	LW         4(R4),R9
 2000638:	14 06 40 00 	CMP        R9,R2
 200063c:	78 88 00 7c 	BZ         @0x020006bc    // 20006bc <_malloc_r+0x234>
 2000640:	0c 86 40 04 	LW         4(R9),R1
 2000644:	89 7c 8b a8 	AND        $-4,R1         | CMP        R5,R1
 2000648:	78 b8 00 1c 	BNC        @0x02000668    // 2000668 <_malloc_r+0x1e0>
 200064c:	78 80 00 60 	BRA        @0x020006b0    // 20006b0 <_malloc_r+0x228>
 2000650:	0c 86 40 04 	LW         4(R9),R1
 2000654:	89 7c 8b a8 	AND        $-4,R1         | CMP        R5,R1
 2000658:	78 b8 00 0c 	BNC        @0x02000668    // 2000668 <_malloc_r+0x1e0>
 200065c:	2c 04 40 00 	CMP        R1,R5
 2000660:	78 a8 00 4c 	BNZ        @0x020006b0    // 20006b0 <_malloc_r+0x228>
 2000664:	78 80 00 14 	BRA        @0x0200067c    // 200067c <_malloc_r+0x1f4>
 2000668:	87 88 80 a8 	MOV        R1,R0          | SUB        R5,R0
 200066c:	04 00 00 10 	CMP        $16,R0
 2000670:	78 98 00 08 	BC         @0x0200067c    // 200067c <_malloc_r+0x1f4>
 2000674:	03 40 c0 00 	MOV        R3,R0
 2000678:	78 80 00 40 	BRA        @0x020006bc    // 20006bc <_malloc_r+0x234>
 200067c:	04 86 40 0c 	LW         12(R9),R0
 2000680:	14 86 40 08 	LW         8(R9),R2
 2000684:	04 c4 80 0c 	SW         R0,$12(R2)
 2000688:	14 c4 00 08 	SW         R2,$8(R0)
 200068c:	b7 c8 b2 88 	MOV        R9,R6          | ADD        R1,R6
 2000690:	04 85 80 04 	LW         4(R6),R0
 2000694:	00 c0 00 01 	OR         $1,R0
 2000698:	04 c5 80 04 	SW         R0,$4(R6)
 200069c:	0b 43 00 00 	MOV        R12,R1
 20006a0:	87 fa fc f8 	JSR        0x02000e44     // 2000e44 <__malloc_unlock>
 20006a4:	02 00 0e 44 
 20006a8:	8f c8 8a 08 	MOV        R9,R1          | ADD        $8,R1
 20006ac:	78 80 07 78 	BRA        @0x02000e28    // 2000e28 <_malloc_r+0x9a0>
 20006b0:	4c 86 40 0c 	LW         12(R9),R9
 20006b4:	14 06 40 00 	CMP        R9,R2
 20006b8:	78 ab ff 94 	BNZ        @0x02000650    // 2000650 <_malloc_r+0x1c8>
 20006bc:	4c 86 00 10 	LW         16(R8),R9
 20006c0:	12 00 00 40 	LDI        0x02001a20,R2  // 2001a20 <__malloc_av_+0x8>
 20006c4:	12 40 1a 20 
 20006c8:	4c 04 80 00 	CMP        R2,R9
 20006cc:	78 a8 00 08 	BNZ        @0x020006d8    // 20006d8 <_malloc_r+0x250>
 20006d0:	24 86 00 04 	LW         4(R8),R4
 20006d4:	78 80 01 f8 	BRA        @0x020008d0    // 20008d0 <_malloc_r+0x448>
 20006d8:	0c 86 40 04 	LW         4(R9),R1
 20006dc:	89 7c 8b a8 	AND        $-4,R1         | CMP        R5,R1
 20006e0:	78 b8 00 14 	BNC        @0x020006f8    // 20006f8 <_malloc_r+0x270>
 20006e4:	14 c6 00 14 	SW         R2,$20(R8)
 20006e8:	14 c6 00 10 	SW         R2,$16(R8)
 20006ec:	0c 00 02 00 	CMP        $512,R1
 20006f0:	78 b8 00 a8 	BNC        @0x0200079c    // 200079c <_malloc_r+0x314>
 20006f4:	78 80 00 4c 	BRA        @0x02000744    // 2000744 <_malloc_r+0x2bc>
 20006f8:	87 88 80 a8 	MOV        R1,R0          | SUB        R5,R0
 20006fc:	04 00 00 10 	CMP        $16,R0
 2000700:	78 98 06 fc 	BC         @0x02000e00    // 2000e00 <_malloc_r+0x978>
 2000704:	9f c8 9a a8 	MOV        R9,R3          | ADD        R5,R3
 2000708:	28 c0 00 01 	OR         $1,R5
 200070c:	2c c6 40 04 	SW         R5,$4(R9)
 2000710:	1c c6 00 14 	SW         R3,$20(R8)
 2000714:	1c c6 00 10 	SW         R3,$16(R8)
 2000718:	14 c4 c0 0c 	SW         R2,$12(R3)
 200071c:	14 c4 c0 08 	SW         R2,$8(R3)
 2000720:	13 40 00 00 	MOV        R0,R2
 2000724:	10 c0 00 01 	OR         $1,R2
 2000728:	14 c4 c0 04 	SW         R2,$4(R3)
 200072c:	bf c8 ba 88 	MOV        R9,R7          | ADD        R1,R7
 2000730:	85 b8 8f e0 	SW         R0,(R7)        | MOV        R12,R1
 2000734:	87 fa fc f8 	JSR        0x02000e44     // 2000e44 <__malloc_unlock>
 2000738:	02 00 0e 44 
 200073c:	8f c8 8a 08 	MOV        R9,R1          | ADD        $8,R1
 2000740:	78 80 06 e4 	BRA        @0x02000e28    // 2000e28 <_malloc_r+0x9a0>
 2000744:	09 40 00 03 	LSR        $3,R1
 2000748:	1b 40 40 00 	MOV        R1,R3
 200074c:	19 c0 00 02 	ASR        $2,R3
 2000750:	97 98 92 60 	MOV        R3,R2          | ADD        $-32,R2
 2000754:	78 90 00 08 	BLT        @0x02000760    // 2000760 <_malloc_r+0x2d8>
 2000758:	16 00 00 00 	CLR        R2
 200075c:	78 80 00 08 	BRA        @0x02000768    // 2000768 <_malloc_r+0x2e0>
 2000760:	16 00 00 01 	LDI        $1,R2
 2000764:	11 84 c0 00 	LSL        R3,R2
 2000768:	24 86 00 04 	LW         4(R8),R4
 200076c:	20 c4 80 00 	OR         R2,R4
 2000770:	24 c6 00 04 	SW         R4,$4(R8)
 2000774:	08 80 00 01 	ADD        $1,R1
 2000778:	09 80 00 03 	LSL        $3,R1
 200077c:	97 c0 92 88 	MOV        R8,R2          | ADD        R1,R2
 2000780:	8f 90 94 90 	MOV        R2,R1          | LW         (R2),R2
 2000784:	9f 88 9a 78 	MOV        R1,R3          | ADD        $-8,R3
 2000788:	1c c6 40 0c 	SW         R3,$12(R9)
 200078c:	14 c6 40 08 	SW         R2,$8(R9)
 2000790:	4c c4 40 00 	SW         R9,(R1)
 2000794:	4c c4 80 0c 	SW         R9,$12(R2)
 2000798:	78 80 01 34 	BRA        @0x020008d0    // 20008d0 <_malloc_r+0x448>
 200079c:	13 40 40 00 	MOV        R1,R2
 20007a0:	11 40 00 09 	LSR        $9,R2
 20007a4:	14 00 00 05 	CMP        $5,R2
 20007a8:	78 b8 00 18 	BNC        @0x020007c4    // 20007c4 <_malloc_r+0x33c>
 20007ac:	13 40 40 00 	MOV        R1,R2
 20007b0:	11 40 00 06 	LSR        $6,R2
 20007b4:	9f 90 9a 38 	MOV        R2,R3          | ADD        $56,R3
 20007b8:	10 80 00 39 	ADD        $57,R2
 20007bc:	11 80 00 03 	LSL        $3,R2
 20007c0:	78 80 00 90 	BRA        @0x02000854    // 2000854 <_malloc_r+0x3cc>
 20007c4:	14 00 00 15 	CMP        $21,R2
 20007c8:	78 b8 00 14 	BNC        @0x020007e0    // 20007e0 <_malloc_r+0x358>
 20007cc:	1b 40 80 00 	MOV        R2,R3
 20007d0:	18 80 00 5b 	ADD        $91,R3
 20007d4:	10 80 00 5c 	ADD        $92,R2
 20007d8:	11 80 00 03 	LSL        $3,R2
 20007dc:	78 80 00 74 	BRA        @0x02000854    // 2000854 <_malloc_r+0x3cc>
 20007e0:	14 00 00 55 	CMP        $85,R2
 20007e4:	78 b8 00 1c 	BNC        @0x02000804    // 2000804 <_malloc_r+0x37c>
 20007e8:	13 40 40 00 	MOV        R1,R2
 20007ec:	11 40 00 0c 	LSR        $12,R2
 20007f0:	1b 40 80 00 	MOV        R2,R3
 20007f4:	18 80 00 6e 	ADD        $110,R3
 20007f8:	10 80 00 6f 	ADD        $111,R2
 20007fc:	11 80 00 03 	LSL        $3,R2
 2000800:	78 80 00 50 	BRA        @0x02000854    // 2000854 <_malloc_r+0x3cc>
 2000804:	14 00 01 55 	CMP        $341,R2
 2000808:	78 b8 00 1c 	BNC        @0x02000828    // 2000828 <_malloc_r+0x3a0>
 200080c:	13 40 40 00 	MOV        R1,R2
 2000810:	11 40 00 0f 	LSR        $15,R2
 2000814:	1b 40 80 00 	MOV        R2,R3
 2000818:	18 80 00 77 	ADD        $119,R3
 200081c:	10 80 00 78 	ADD        $120,R2
 2000820:	11 80 00 03 	LSL        $3,R2
 2000824:	78 80 00 2c 	BRA        @0x02000854    // 2000854 <_malloc_r+0x3cc>
 2000828:	14 00 05 55 	CMP        $1365,R2
 200082c:	78 b8 00 1c 	BNC        @0x0200084c    // 200084c <_malloc_r+0x3c4>
 2000830:	13 40 40 00 	MOV        R1,R2
 2000834:	11 40 00 12 	LSR        $18,R2
 2000838:	1b 40 80 00 	MOV        R2,R3
 200083c:	18 80 00 7c 	ADD        $124,R3
 2000840:	10 80 00 7d 	ADD        $125,R2
 2000844:	11 80 00 03 	LSL        $3,R2
 2000848:	78 80 00 08 	BRA        @0x02000854    // 2000854 <_malloc_r+0x3cc>
 200084c:	16 00 03 f8 	LDI        $1016,R2
 2000850:	1e 00 00 7e 	LDI        $126,R3
 2000854:	a7 c0 a2 90 	MOV        R8,R4          | ADD        R2,R4
 2000858:	b7 a0 b2 78 	MOV        R4,R6          | ADD        $-8,R6
 200085c:	94 a0 b3 90 	LW         (R4),R2        | CMP        R2,R6
 2000860:	78 a8 00 40 	BNZ        @0x020008a4    // 20008a4 <_malloc_r+0x41c>
 2000864:	19 c0 00 02 	ASR        $2,R3
 2000868:	8f 98 8a 60 	MOV        R3,R1          | ADD        $-32,R1
 200086c:	78 90 00 08 	BLT        @0x02000878    // 2000878 <_malloc_r+0x3f0>
 2000870:	0e 00 00 00 	CLR        R1
 2000874:	78 80 00 08 	BRA        @0x02000880    // 2000880 <_malloc_r+0x3f8>
 2000878:	0e 00 00 01 	LDI        $1,R1
 200087c:	09 84 c0 00 	LSL        R3,R1
 2000880:	24 86 00 04 	LW         4(R8),R4
 2000884:	20 c4 40 00 	OR         R1,R4
 2000888:	24 c6 00 04 	SW         R4,$4(R8)
 200088c:	8f b0 b7 90 	MOV        R6,R1          | MOV        R2,R6
 2000890:	78 80 00 2c 	BRA        @0x020008c0    // 20008c0 <_malloc_r+0x438>
 2000894:	14 84 80 08 	LW         8(R2),R2
 2000898:	34 04 80 00 	CMP        R2,R6
 200089c:	78 88 00 18 	BZ         @0x020008b8    // 20008b8 <_malloc_r+0x430>
 20008a0:	78 80 00 00 	BRA        @0x020008a4    // 20008a4 <_malloc_r+0x41c>
 20008a4:	1c 84 80 04 	LW         4(R2),R3
 20008a8:	99 7c 8b 98 	AND        $-4,R3         | CMP        R3,R1
 20008ac:	78 9b ff e4 	BC         @0x02000894    // 2000894 <_malloc_r+0x40c>
 20008b0:	33 40 80 00 	MOV        R2,R6
 20008b4:	78 80 00 00 	BRA        @0x020008b8    // 20008b8 <_malloc_r+0x430>
 20008b8:	0c 85 80 0c 	LW         12(R6),R1
 20008bc:	24 86 00 04 	LW         4(R8),R4
 20008c0:	0c c6 40 0c 	SW         R1,$12(R9)
 20008c4:	34 c6 40 08 	SW         R6,$8(R9)
 20008c8:	4c c4 40 08 	SW         R9,$8(R1)
 20008cc:	4c c5 80 0c 	SW         R9,$12(R6)
 20008d0:	13 40 00 00 	MOV        R0,R2
 20008d4:	11 c0 00 02 	ASR        $2,R2
 20008d8:	8f 90 8a 60 	MOV        R2,R1          | ADD        $-32,R1
 20008dc:	78 90 00 10 	BLT        @0x020008f0    // 20008f0 <_malloc_r+0x468>
 20008e0:	96 01 d6 01 	LDI        $1,R2          | LDI        $1,R10
 20008e4:	51 84 40 00 	LSL        R1,R10
 20008e8:	5e 00 00 00 	CLR        R11
 20008ec:	78 80 00 0c 	BRA        @0x020008fc    // 20008fc <_malloc_r+0x474>
 20008f0:	d6 00 de 00 	CLR        R10            | CLR        R11
 20008f4:	8e 01 de 01 	LDI        $1,R1          | LDI        $1,R11
 20008f8:	59 84 80 00 	LSL        R2,R11
 20008fc:	9f a0 96 00 	MOV        R4,R3          | CLR        R2
 2000900:	14 06 80 00 	CMP        R10,R2
 2000904:	1c 0e c0 00 	CMP.Z      R11,R3
 2000908:	78 98 01 fc 	BC         @0x02000b08    // 2000b08 <_malloc_r+0x680>
 200090c:	b7 d0 bf d8 	MOV        R10,R6         | MOV        R11,R7
 2000910:	b9 98 b1 90 	AND        R3,R7          | AND        R2,R6
 2000914:	34 00 00 00 	CMP        $0,R6
 2000918:	3c 08 00 00 	CMP.Z      $0,R7
 200091c:	78 a8 00 3c 	BNZ        @0x0200095c    // 200095c <_malloc_r+0x4d4>
 2000920:	81 7c 82 04 	AND        $-4,R0         | ADD        $4,R0
 2000924:	58 86 c0 00 	ADD        R11,R11
 2000928:	50 98 00 01 	ADD.C      $1,R10
 200092c:	d2 d0 b7 90 	ADD        R10,R10        | MOV        R2,R6
 2000930:	bf 98 b9 d8 	MOV        R3,R7          | AND        R11,R7
 2000934:	b1 d0 b3 00 	AND        R10,R6         | CMP        $0,R6
 2000938:	3c 08 00 00 	CMP.Z      $0,R7
 200093c:	78 a8 00 1c 	BNZ        @0x0200095c    // 200095c <_malloc_r+0x4d4>
 2000940:	82 04 da d8 	ADD        $4,R0          | ADD        R11,R11
 2000944:	50 98 00 01 	ADD.C      $1,R10
 2000948:	d2 d0 b7 90 	ADD        R10,R10        | MOV        R2,R6
 200094c:	bf 98 b9 d8 	MOV        R3,R7          | AND        R11,R7
 2000950:	b1 d0 b3 00 	AND        R10,R6         | CMP        $0,R6
 2000954:	3c 08 00 00 	CMP.Z      $0,R7
 2000958:	78 8b ff e4 	BZ         @0x02000940    // 2000940 <_malloc_r+0x4b8>
 200095c:	0b 40 00 00 	MOV        R0,R1
 2000960:	09 80 00 03 	LSL        $3,R1
 2000964:	bf c0 ba 88 	MOV        R8,R7          | ADD        R1,R7
 2000968:	9f b8 97 80 	MOV        R7,R3          | MOV        R0,R2
 200096c:	4c 84 c0 0c 	LW         12(R3),R9
 2000970:	1c 06 40 00 	CMP        R9,R3
 2000974:	78 88 00 c8 	BZ         @0x02000a40    // 2000a40 <_malloc_r+0x5b8>
 2000978:	0c 86 40 04 	LW         4(R9),R1
 200097c:	89 7c 8b a8 	AND        $-4,R1         | CMP        R5,R1
 2000980:	78 b8 00 14 	BNC        @0x02000998    // 2000998 <_malloc_r+0x510>
 2000984:	78 80 00 ac 	BRA        @0x02000a34    // 2000a34 <_malloc_r+0x5ac>
 2000988:	0c 86 40 04 	LW         4(R9),R1
 200098c:	89 7c 8b a8 	AND        $-4,R1         | CMP        R5,R1
 2000990:	78 98 00 a0 	BC         @0x02000a34    // 2000a34 <_malloc_r+0x5ac>
 2000994:	78 80 00 00 	BRA        @0x02000998    // 2000998 <_malloc_r+0x510>
 2000998:	87 88 80 a8 	MOV        R1,R0          | SUB        R5,R0
 200099c:	04 00 00 10 	CMP        $16,R0
 20009a0:	78 98 00 58 	BC         @0x020009fc    // 20009fc <_malloc_r+0x574>
 20009a4:	97 c8 92 a8 	MOV        R9,R2          | ADD        R5,R2
 20009a8:	28 c0 00 01 	OR         $1,R5
 20009ac:	2c c6 40 04 	SW         R5,$4(R9)
 20009b0:	1c 86 40 0c 	LW         12(R9),R3
 20009b4:	24 86 40 08 	LW         8(R9),R4
 20009b8:	1c c5 00 0c 	SW         R3,$12(R4)
 20009bc:	24 c4 c0 08 	SW         R4,$8(R3)
 20009c0:	14 c6 00 14 	SW         R2,$20(R8)
 20009c4:	14 c6 00 10 	SW         R2,$16(R8)
 20009c8:	32 00 00 40 	LDI        0x02001a20,R6  // 2001a20 <__malloc_av_+0x8>
 20009cc:	32 40 1a 20 
 20009d0:	34 c4 80 0c 	SW         R6,$12(R2)
 20009d4:	34 c4 80 08 	SW         R6,$8(R2)
 20009d8:	1b 40 00 00 	MOV        R0,R3
 20009dc:	18 c0 00 01 	OR         $1,R3
 20009e0:	1c c4 80 04 	SW         R3,$4(R2)
 20009e4:	bf c8 ba 88 	MOV        R9,R7          | ADD        R1,R7
 20009e8:	85 b8 8f e0 	SW         R0,(R7)        | MOV        R12,R1
 20009ec:	87 fa fc f8 	JSR        0x02000e44     // 2000e44 <__malloc_unlock>
 20009f0:	02 00 0e 44 
 20009f4:	8f c8 8a 08 	MOV        R9,R1          | ADD        $8,R1
 20009f8:	78 80 04 2c 	BRA        @0x02000e28    // 2000e28 <_malloc_r+0x9a0>
 20009fc:	87 c8 82 88 	MOV        R9,R0          | ADD        R1,R0
 2000a00:	0b 40 00 00 	MOV        R0,R1
 2000a04:	04 84 00 04 	LW         4(R0),R0
 2000a08:	00 c0 00 01 	OR         $1,R0
 2000a0c:	04 c4 40 04 	SW         R0,$4(R1)
 2000a10:	04 86 40 0c 	LW         12(R9),R0
 2000a14:	0c 86 40 08 	LW         8(R9),R1
 2000a18:	04 c4 40 0c 	SW         R0,$12(R1)
 2000a1c:	0c c4 00 08 	SW         R1,$8(R0)
 2000a20:	0b 43 00 00 	MOV        R12,R1
 2000a24:	87 fa fc f8 	JSR        0x02000e44     // 2000e44 <__malloc_unlock>
 2000a28:	02 00 0e 44 
 2000a2c:	8f c8 8a 08 	MOV        R9,R1          | ADD        $8,R1
 2000a30:	78 80 03 f4 	BRA        @0x02000e28    // 2000e28 <_malloc_r+0x9a0>
 2000a34:	4c 86 40 0c 	LW         12(R9),R9
 2000a38:	1c 06 40 00 	CMP        R9,R3
 2000a3c:	78 ab ff 48 	BNZ        @0x02000988    // 2000988 <_malloc_r+0x500>
 2000a40:	9a 08 92 01 	ADD        $8,R3          | ADD        $1,R2
 2000a44:	8f 90 89 03 	MOV        R2,R1          | AND        $3,R1
 2000a48:	78 ab ff 20 	BNZ        @0x0200096c    // 200096c <_malloc_r+0x4e4>
 2000a4c:	8f 80 89 03 	MOV        R0,R1          | AND        $3,R1
 2000a50:	78 a8 00 14 	BNZ        @0x02000a68    // 2000a68 <_malloc_r+0x5e0>
 2000a54:	03 42 c0 00 	MOV        R11,R0
 2000a58:	01 03 ff ff 	XOR        $-1,R0
 2000a5c:	20 44 00 00 	AND        R0,R4
 2000a60:	24 c6 00 04 	SW         R4,$4(R8)
 2000a64:	78 80 00 0c 	BRA        @0x02000a74    // 2000a74 <_malloc_r+0x5ec>
 2000a68:	82 7f 8c b8 	ADD        $-1,R0         | LW         (R7),R1
 2000a6c:	ba 78 bb 88 	ADD        $-8,R7         | CMP        R1,R7
 2000a70:	78 8b ff d8 	BZ         @0x02000a4c    // 2000a4c <_malloc_r+0x5c4>
 2000a74:	b7 d0 bf d8 	MOV        R10,R6         | MOV        R11,R7
 2000a78:	38 86 c0 00 	ADD        R11,R7
 2000a7c:	30 98 00 01 	ADD.C      $1,R6
 2000a80:	b2 d0 b5 00 	ADD        R10,R6         | SW         R6,(SP)
 2000a84:	bd 04 d7 b0 	SW         R7,$4(SP)      | MOV        R6,R10
 2000a88:	df b8 a5 14 	MOV        R7,R11         | SW         R4,$20(SP)
 2000a8c:	be 00 bd 10 	CLR        R7             | SW         R7,$16(SP)
 2000a90:	1b 42 80 00 	MOV        R10,R3
 2000a94:	18 c6 c0 00 	OR         R11,R3
 2000a98:	9b b8 9e 00 	CMP        R7,R3          | CLR        R3
 2000a9c:	1a 68 00 01 	LDILO.NZ   $1,R3
 2000aa0:	be 01 84 10 	LDI        $1,R7          | LW         16(SP),R0
 2000aa4:	8c 14 83 d0 	LW         20(SP),R1      | CMP        R10,R0
 2000aa8:	78 98 00 08 	BC         @0x02000ab4    // 2000ab4 <_malloc_r+0x62c>
 2000aac:	0c 0e c0 00 	CMP.Z      R11,R1
 2000ab0:	78 b8 00 04 	BNC        @0x02000ab8    // 2000ab8 <_malloc_r+0x630>
 2000ab4:	3e 00 00 00 	CLR        R7
 2000ab8:	18 45 c0 00 	AND        R7,R3
 2000abc:	18 40 00 ff 	AND        $255,R3
 2000ac0:	78 88 00 44 	BZ         @0x02000b08    // 2000b08 <_malloc_r+0x680>
 2000ac4:	b4 00 bc 04 	LW         (SP),R6        | LW         4(SP),R7
 2000ac8:	84 10 8c 14 	LW         16(SP),R0      | LW         20(SP),R1
 2000acc:	b9 88 b1 80 	AND        R1,R7          | AND        R0,R6
 2000ad0:	87 90 b3 00 	MOV        R2,R0          | CMP        $0,R6
 2000ad4:	3c 08 00 00 	CMP.Z      $0,R7
 2000ad8:	78 ab fe 80 	BNZ        @0x0200095c    // 200095c <_malloc_r+0x4d4>
 2000adc:	87 90 8f c0 	MOV        R2,R0          | MOV        R8,R1
 2000ae0:	c4 10 cc 14 	LW         16(SP),R8      | LW         20(SP),R9
 2000ae4:	82 04 da d8 	ADD        $4,R0          | ADD        R11,R11
 2000ae8:	50 98 00 01 	ADD.C      $1,R10
 2000aec:	d2 d0 97 c0 	ADD        R10,R10        | MOV        R8,R2
 2000af0:	9f c8 99 d8 	MOV        R9,R3          | AND        R11,R3
 2000af4:	91 d0 93 00 	AND        R10,R2         | CMP        $0,R2
 2000af8:	1c 08 00 00 	CMP.Z      $0,R3
 2000afc:	78 8b ff e4 	BZ         @0x02000ae4    // 2000ae4 <_malloc_r+0x65c>
 2000b00:	43 40 40 00 	MOV        R1,R8
 2000b04:	78 83 fe 54 	BRA        @0x0200095c    // 200095c <_malloc_r+0x4d4>
 2000b08:	4c 86 00 08 	LW         8(R8),R9
 2000b0c:	54 86 40 04 	LW         4(R9),R10
 2000b10:	d1 7c bf d0 	AND        $-4,R10        | MOV        R10,R7
 2000b14:	b8 a8 b6 00 	SUB        R5,R7          | CLR        R6
 2000b18:	d3 a8 86 00 	CMP        R5,R10         | CLR        R0
 2000b1c:	02 58 00 01 	LDILO.C    $1,R0
 2000b20:	8e 01 b3 00 	LDI        $1,R1          | CMP        $0,R6
 2000b24:	78 90 00 10 	BLT        @0x02000b38    // 2000b38 <_malloc_r+0x6b0>
 2000b28:	78 a8 00 08 	BNZ        @0x02000b34    // 2000b34 <_malloc_r+0x6ac>
 2000b2c:	3c 00 00 0e 	CMP        $14,R7
 2000b30:	78 98 00 04 	BC         @0x02000b38    // 2000b38 <_malloc_r+0x6b0>
 2000b34:	0e 00 00 00 	CLR        R1
 2000b38:	00 c4 40 00 	OR         R1,R0
 2000b3c:	00 40 00 ff 	AND        $255,R0
 2000b40:	78 88 02 68 	BZ         @0x02000dac    // 2000dac <_malloc_r+0x924>
 2000b44:	02 00 10 40 	LDI        0x020822cc,R0  // 20822cc <__malloc_top_pad>
 2000b48:	02 40 22 cc 
 2000b4c:	04 84 00 04 	LW         4(R0),R0
 2000b50:	8f a8 8a 80 	MOV        R5,R1          | ADD        R0,R1
 2000b54:	03 40 40 00 	MOV        R1,R0
 2000b58:	22 00 00 40 	LDI        0x02001a0c,R4  // 2001a0c <__malloc_sbrk_base>
 2000b5c:	22 40 1a 0c 
 2000b60:	8c a0 8b 7f 	LW         (R4),R1        | CMP        $-1,R1
 2000b64:	78 a8 00 0c 	BNZ        @0x02000b74    // 2000b74 <_malloc_r+0x6ec>
 2000b68:	82 10 85 10 	ADD        $16,R0         | SW         R0,$16(SP)
 2000b6c:	13 40 00 00 	MOV        R0,R2
 2000b70:	78 80 00 0c 	BRA        @0x02000b80    // 2000b80 <_malloc_r+0x6f8>
 2000b74:	00 80 10 0f 	ADD        $4111,R0
 2000b78:	00 43 f0 00 	AND        $-4096,R0
 2000b7c:	85 10 97 80 	SW         R0,$16(SP)     | MOV        R0,R2
 2000b80:	8f e0 a5 08 	MOV        R12,R1         | SW         R4,$8(SP)
 2000b84:	87 fa fc f8 	JSR        0x02001768     // 2001768 <_sbrk_r>
 2000b88:	02 00 17 68 
 2000b8c:	df 88 8b 7f 	MOV        R1,R11         | CMP        $-1,R1
 2000b90:	24 87 40 08 	LW         8(SP),R4
 2000b94:	78 a8 00 10 	BNZ        @0x02000ba8    // 2000ba8 <_malloc_r+0x720>
 2000b98:	4c 86 00 08 	LW         8(R8),R9
 2000b9c:	04 86 40 04 	LW         4(R9),R0
 2000ba0:	00 43 ff fc 	AND        $-4,R0
 2000ba4:	78 80 01 bc 	BRA        @0x02000d64    // 2000d64 <_malloc_r+0x8dc>
 2000ba8:	8f c8 8a d0 	MOV        R9,R1          | ADD        R10,R1
 2000bac:	cb c0 86 00 	CMP        R8,R9          | CLR        R0
 2000bb0:	02 68 00 01 	LDILO.NZ   $1,R0
 2000bb4:	db 88 96 00 	CMP        R1,R11         | CLR        R2
 2000bb8:	12 58 00 01 	LDILO.C    $1,R2
 2000bbc:	00 44 80 00 	AND        R2,R0
 2000bc0:	78 88 00 10 	BZ         @0x02000bd4    // 2000bd4 <_malloc_r+0x74c>
 2000bc4:	4c 86 00 08 	LW         8(R8),R9
 2000bc8:	04 86 40 04 	LW         4(R9),R0
 2000bcc:	00 43 ff fc 	AND        $-4,R0
 2000bd0:	78 80 01 90 	BRA        @0x02000d64    // 2000d64 <_malloc_r+0x8dc>
 2000bd4:	1a 00 10 40 	LDI        0x02082294,R3  // 2082294 <__malloc_current_mallinfo>
 2000bd8:	1a 40 22 94 
 2000bdc:	84 98 94 10 	LW         (R3),R0        | LW         16(SP),R2
 2000be0:	92 80 95 98 	ADD        R0,R2          | SW         R2,(R3)
 2000be4:	0c 06 c0 00 	CMP        R11,R1
 2000be8:	78 a8 00 24 	BNZ        @0x02000c10    // 2000c10 <_malloc_r+0x788>
 2000bec:	03 40 40 00 	MOV        R1,R0
 2000bf0:	00 40 0f ff 	AND        $4095,R0
 2000bf4:	78 a8 00 18 	BNZ        @0x02000c10    // 2000c10 <_malloc_r+0x788>
 2000bf8:	0c 86 00 08 	LW         8(R8),R1
 2000bfc:	87 d0 9c 10 	MOV        R10,R0         | LW         16(SP),R3
 2000c00:	00 84 c0 00 	ADD        R3,R0
 2000c04:	00 c0 00 01 	OR         $1,R0
 2000c08:	04 c4 40 04 	SW         R0,$4(R1)
 2000c0c:	78 80 00 e4 	BRA        @0x02000cf4    // 2000cf4 <_malloc_r+0x86c>
 2000c10:	84 a0 83 7f 	LW         (R4),R0        | CMP        $-1,R0
 2000c14:	78 a8 00 08 	BNZ        @0x02000c20    // 2000c20 <_malloc_r+0x798>
 2000c18:	5c c5 00 00 	SW         R11,(R4)
 2000c1c:	78 80 00 08 	BRA        @0x02000c28    // 2000c28 <_malloc_r+0x7a0>
 2000c20:	87 d8 80 88 	MOV        R11,R0         | SUB        R1,R0
 2000c24:	82 90 85 98 	ADD        R2,R0          | SW         R0,(R3)
 2000c28:	87 d8 81 07 	MOV        R11,R0         | AND        $7,R0
 2000c2c:	78 88 00 14 	BZ         @0x02000c44    // 2000c44 <_malloc_r+0x7bc>
 2000c30:	58 04 00 00 	SUB        R0,R11
 2000c34:	5b 42 c0 08 	MOV        $8+R11,R11
 2000c38:	16 00 10 08 	LDI        $4104,R2
 2000c3c:	10 04 00 00 	SUB        R0,R2
 2000c40:	78 80 00 04 	BRA        @0x02000c48    // 2000c48 <_malloc_r+0x7c0>
 2000c44:	16 00 10 00 	LDI        $4096,R2
 2000c48:	87 d8 a4 10 	MOV        R11,R0         | LW         16(SP),R4
 2000c4c:	00 85 00 00 	ADD        R4,R0
 2000c50:	00 40 0f ff 	AND        $4095,R0
 2000c54:	a7 90 a0 80 	MOV        R2,R4          | SUB        R0,R4
 2000c58:	97 a0 8f e0 	MOV        R4,R2          | MOV        R12,R1
 2000c5c:	9d 0c a5 08 	SW         R3,$12(SP)     | SW         R4,$8(SP)
 2000c60:	87 fa fc f8 	JSR        0x02001768     // 2001768 <_sbrk_r>
 2000c64:	02 00 17 68 
 2000c68:	8b 7f 9c 0c 	CMP        $-1,R1         | LW         12(SP),R3
 2000c6c:	24 87 40 08 	LW         8(SP),R4
 2000c70:	78 88 00 10 	BZ         @0x02000c84    // 2000c84 <_malloc_r+0x7fc>
 2000c74:	87 88 80 d8 	MOV        R1,R0          | SUB        R11,R0
 2000c78:	00 85 00 00 	ADD        R4,R0
 2000c7c:	00 c0 00 01 	OR         $1,R0
 2000c80:	78 80 00 04 	BRA        @0x02000c88    // 2000c88 <_malloc_r+0x800>
 2000c84:	86 01 a6 00 	LDI        $1,R0          | CLR        R4
 2000c88:	8c 98 97 a0 	LW         (R3),R1        | MOV        R4,R2
 2000c8c:	92 88 95 98 	ADD        R1,R2          | SW         R2,(R3)
 2000c90:	5c c6 00 08 	SW         R11,$8(R8)
 2000c94:	04 c6 c0 04 	SW         R0,$4(R11)
 2000c98:	4c 06 00 00 	CMP        R8,R9
 2000c9c:	78 88 00 54 	BZ         @0x02000cf4    // 2000cf4 <_malloc_r+0x86c>
 2000ca0:	54 00 00 10 	CMP        $16,R10
 2000ca4:	78 b8 00 0c 	BNC        @0x02000cb4    // 2000cb4 <_malloc_r+0x82c>
 2000ca8:	36 00 00 01 	LDI        $1,R6
 2000cac:	34 c6 c0 04 	SW         R6,$4(R11)
 2000cb0:	78 80 00 e4 	BRA        @0x02000d98    // 2000d98 <_malloc_r+0x910>
 2000cb4:	d2 74 d1 78 	ADD        $-12,R10       | AND        $-8,R10
 2000cb8:	04 86 40 04 	LW         4(R9),R0
 2000cbc:	00 40 00 01 	AND        $1,R0
 2000cc0:	00 c6 80 00 	OR         R10,R0
 2000cc4:	04 c6 40 04 	SW         R0,$4(R9)
 2000cc8:	87 c8 82 d0 	MOV        R9,R0          | ADD        R10,R0
 2000ccc:	0e 00 00 05 	LDI        $5,R1
 2000cd0:	0c c4 00 04 	SW         R1,$4(R0)
 2000cd4:	0c c4 00 08 	SW         R1,$8(R0)
 2000cd8:	54 00 00 10 	CMP        $16,R10
 2000cdc:	78 98 00 14 	BC         @0x02000cf4    // 2000cf4 <_malloc_r+0x86c>
 2000ce0:	97 c8 92 08 	MOV        R9,R2          | ADD        $8,R2
 2000ce4:	8f e0 9d 0c 	MOV        R12,R1         | SW         R3,$12(SP)
 2000ce8:	87 fa fc f8 	JSR        0x02000fc4     // 2000fc4 <_free_r>
 2000cec:	02 00 0f c4 
 2000cf0:	9c 0c 94 98 	LW         12(SP),R3      | LW         (R3),R2
 2000cf4:	8f 90 87 90 	MOV        R2,R1          | MOV        R2,R0
 2000cf8:	01 c0 00 1f 	ASR        $31,R0
 2000cfc:	22 00 10 40 	LDI        0x020822c4,R4  // 20822c4 <__malloc_max_sbrked_mem>
 2000d00:	22 40 22 c4 
 2000d04:	14 85 00 00 	LW         (R4),R2
 2000d08:	1c 85 00 04 	LW         4(R4),R3
 2000d0c:	14 04 00 00 	CMP        R0,R2
 2000d10:	78 98 00 08 	BC         @0x02000d1c    // 2000d1c <_malloc_r+0x894>
 2000d14:	1c 0c 40 00 	CMP.Z      R1,R3
 2000d18:	78 b8 00 08 	BNC        @0x02000d24    // 2000d24 <_malloc_r+0x89c>
 2000d1c:	04 c5 00 00 	SW         R0,(R4)
 2000d20:	0c c5 00 04 	SW         R1,$4(R4)
 2000d24:	22 00 10 40 	LDI        0x020822bc,R4  // 20822bc <__malloc_max_total_mem>
 2000d28:	22 40 22 bc 
 2000d2c:	14 85 00 00 	LW         (R4),R2
 2000d30:	1c 85 00 04 	LW         4(R4),R3
 2000d34:	14 04 00 00 	CMP        R0,R2
 2000d38:	1c 0c 40 00 	CMP.Z      R1,R3
 2000d3c:	78 98 00 10 	BC         @0x02000d50    // 2000d50 <_malloc_r+0x8c8>
 2000d40:	4c 86 00 08 	LW         8(R8),R9
 2000d44:	04 86 40 04 	LW         4(R9),R0
 2000d48:	00 43 ff fc 	AND        $-4,R0
 2000d4c:	78 80 00 14 	BRA        @0x02000d64    // 2000d64 <_malloc_r+0x8dc>
 2000d50:	04 c5 00 00 	SW         R0,(R4)
 2000d54:	0c c5 00 04 	SW         R1,$4(R4)
 2000d58:	4c 86 00 08 	LW         8(R8),R9
 2000d5c:	04 86 40 04 	LW         4(R9),R0
 2000d60:	00 43 ff fc 	AND        $-4,R0
 2000d64:	bf 80 b8 a8 	MOV        R0,R7          | SUB        R5,R7
 2000d68:	b6 00 8e 01 	CLR        R6             | LDI        $1,R1
 2000d6c:	34 00 00 00 	CMP        $0,R6
 2000d70:	78 90 00 10 	BLT        @0x02000d84    // 2000d84 <_malloc_r+0x8fc>
 2000d74:	78 a8 00 08 	BNZ        @0x02000d80    // 2000d80 <_malloc_r+0x8f8>
 2000d78:	3c 00 00 0e 	CMP        $14,R7
 2000d7c:	78 98 00 04 	BC         @0x02000d84    // 2000d84 <_malloc_r+0x8fc>
 2000d80:	0e 00 00 00 	CLR        R1
 2000d84:	83 a8 86 00 	CMP        R5,R0          | CLR        R0
 2000d88:	02 58 00 01 	LDILO.C    $1,R0
 2000d8c:	00 c4 40 00 	OR         R1,R0
 2000d90:	00 40 00 ff 	AND        $255,R0
 2000d94:	78 88 00 14 	BZ         @0x02000dac    // 2000dac <_malloc_r+0x924>
 2000d98:	0b 43 00 00 	MOV        R12,R1
 2000d9c:	87 fa fc f8 	JSR        0x02000e44     // 2000e44 <__malloc_unlock>
 2000da0:	02 00 0e 44 
 2000da4:	0e 00 00 00 	CLR        R1
 2000da8:	78 80 00 7c 	BRA        @0x02000e28    // 2000e28 <_malloc_r+0x9a0>
 2000dac:	03 41 40 00 	MOV        R5,R0
 2000db0:	00 c0 00 01 	OR         $1,R0
 2000db4:	04 c6 40 04 	SW         R0,$4(R9)
 2000db8:	87 c8 82 a8 	MOV        R9,R0          | ADD        R5,R0
 2000dbc:	04 c6 00 08 	SW         R0,$8(R8)
 2000dc0:	0b 41 c0 00 	MOV        R7,R1
 2000dc4:	08 c0 00 01 	OR         $1,R1
 2000dc8:	0c c4 00 04 	SW         R1,$4(R0)
 2000dcc:	0b 43 00 00 	MOV        R12,R1
 2000dd0:	87 fa fc f8 	JSR        0x02000e44     // 2000e44 <__malloc_unlock>
 2000dd4:	02 00 0e 44 
 2000dd8:	8f c8 8a 08 	MOV        R9,R1          | ADD        $8,R1
 2000ddc:	78 80 00 48 	BRA        @0x02000e28    // 2000e28 <_malloc_r+0x9a0>
 2000de0:	87 fa fc f8 	JSR        0x02000e40     // 2000e40 <__malloc_lock>
 2000de4:	02 00 0e 40 
 2000de8:	8e 18 86 02 	LDI        $24,R1         | LDI        $2,R0
 2000dec:	2e 00 00 10 	LDI        $16,R5
 2000df0:	78 83 f6 f4 	BRA        @0x020004e8    // 20004e8 <_malloc_r+0x60>
 2000df4:	14 00 00 11 	CMP        $17,R2
 2000df8:	78 9b ff e4 	BC         @0x02000de0    // 2000de0 <_malloc_r+0x958>
 2000dfc:	78 83 f6 c0 	BRA        @0x020004c0    // 20004c0 <_malloc_r+0x38>
 2000e00:	14 c6 00 14 	SW         R2,$20(R8)
 2000e04:	14 c6 00 10 	SW         R2,$16(R8)
 2000e08:	97 c8 92 88 	MOV        R9,R2          | ADD        R1,R2
 2000e0c:	04 84 80 04 	LW         4(R2),R0
 2000e10:	00 c0 00 01 	OR         $1,R0
 2000e14:	04 c4 80 04 	SW         R0,$4(R2)
 2000e18:	0b 43 00 00 	MOV        R12,R1
 2000e1c:	87 fa fc f8 	JSR        0x02000e44     // 2000e44 <__malloc_unlock>
 2000e20:	02 00 0e 44 
 2000e24:	8f c8 8a 08 	MOV        R9,R1          | ADD        $8,R1
 2000e28:	84 18 ac 1c 	LW         24(SP),R0      | LW         28(SP),R5
 2000e2c:	b4 20 bc 24 	LW         32(SP),R6      | LW         36(SP),R7
 2000e30:	c4 28 cc 2c 	LW         40(SP),R8      | LW         44(SP),R9
 2000e34:	d4 30 dc 34 	LW         48(SP),R10     | LW         52(SP),R11
 2000e38:	e4 38 ea 3c 	LW         56(SP),R12     | ADD        $60,SP
 2000e3c:	7b 40 00 00 	RTN

02000e40 <__malloc_lock>:
 2000e40:	7b 40 00 00 	RTN

02000e44 <__malloc_unlock>:
 2000e44:	7b 40 00 00 	RTN

02000e48 <_malloc_trim_r>:
 2000e48:	e8 24 85 00 	SUB        $36,SP         | SW         R0,(SP)
 2000e4c:	ad 04 b5 08 	SW         R5,$4(SP)      | SW         R6,$8(SP)
 2000e50:	bd 0c c5 10 	SW         R7,$12(SP)     | SW         R8,$16(SP)
 2000e54:	cd 14 d5 18 	SW         R9,$20(SP)     | SW         R10,$24(SP)
 2000e58:	dd 1c e5 20 	SW         R11,$28(SP)    | SW         R12,$32(SP)
 2000e5c:	af 88 e7 90 	MOV        R1,R5          | MOV        R2,R12
 2000e60:	87 fa fc f8 	JSR        0x02000e40     // 2000e40 <__malloc_lock>
 2000e64:	02 00 0e 40 
 2000e68:	52 00 00 40 	LDI        0x02001a18,R10 // 2001a18 <__malloc_av_>
 2000e6c:	52 40 1a 18 
 2000e70:	0c 86 80 08 	LW         8(R10),R1
 2000e74:	5c 84 40 04 	LW         4(R1),R11
 2000e78:	d9 7c cf d8 	AND        $-4,R11        | MOV        R11,R9
 2000e7c:	c6 00 bf e0 	CLR        R8             | MOV        R12,R7
 2000e80:	b6 00 86 00 	CLR        R6             | CLR        R0
 2000e84:	8f c8 88 b8 	MOV        R9,R1          | SUB        R7,R1
 2000e88:	00 18 00 01 	SUB.C      $1,R0
 2000e8c:	80 b0 b7 80 	SUB        R6,R0          | MOV        R0,R6
 2000e90:	bf 88 96 00 	MOV        R1,R7          | CLR        R2
 2000e94:	1e 00 0f ef 	LDI        $4079,R3
 2000e98:	38 84 c0 00 	ADD        R3,R7
 2000e9c:	30 98 00 01 	ADD.C      $1,R6
 2000ea0:	b2 90 8f b0 	ADD        R2,R6          | MOV        R6,R1
 2000ea4:	09 80 00 14 	LSL        $20,R1
 2000ea8:	1b 41 c0 00 	MOV        R7,R3
 2000eac:	19 40 00 0c 	LSR        $12,R3
 2000eb0:	08 c4 c0 00 	OR         R3,R1
 2000eb4:	9f 88 97 b0 	MOV        R1,R3          | MOV        R6,R2
 2000eb8:	11 40 00 0c 	LSR        $12,R2
 2000ebc:	b6 ff be ff 	LDI        $-1,R6         | LDI        $-1,R7
 2000ec0:	18 85 c0 00 	ADD        R7,R3
 2000ec4:	10 98 00 01 	ADD.C      $1,R2
 2000ec8:	92 b0 8f 98 	ADD        R6,R2          | MOV        R3,R1
 2000ecc:	09 40 00 14 	LSR        $20,R1
 2000ed0:	33 40 80 00 	MOV        R2,R6
 2000ed4:	31 80 00 0c 	LSL        $12,R6
 2000ed8:	08 c5 80 00 	OR         R6,R1
 2000edc:	b7 88 bf 98 	MOV        R1,R6          | MOV        R3,R7
 2000ee0:	39 80 00 0c 	LSL        $12,R7
 2000ee4:	34 00 00 00 	CMP        $0,R6
 2000ee8:	78 90 00 0c 	BLT        @0x02000ef8    // 2000ef8 <_malloc_trim_r+0xb0>
 2000eec:	78 a8 00 1c 	BNZ        @0x02000f0c    // 2000f0c <_malloc_trim_r+0xc4>
 2000ef0:	3c 00 10 00 	CMP        $4096,R7
 2000ef4:	78 b8 00 14 	BNC        @0x02000f0c    // 2000f0c <_malloc_trim_r+0xc4>
 2000ef8:	0b 41 40 00 	MOV        R5,R1
 2000efc:	87 fa fc f8 	JSR        0x02000e44     // 2000e44 <__malloc_unlock>
 2000f00:	02 00 0e 44 
 2000f04:	0e 00 00 00 	CLR        R1
 2000f08:	78 80 00 a0 	BRA        @0x02000fac    // 2000fac <_malloc_trim_r+0x164>
 2000f0c:	97 c0 8f a8 	MOV        R8,R2          | MOV        R5,R1
 2000f10:	87 fa fc f8 	JSR        0x02001768     // 2001768 <_sbrk_r>
 2000f14:	02 00 17 68 
 2000f18:	14 86 80 08 	LW         8(R10),R2
 2000f1c:	92 d8 8b 90 	ADD        R11,R2         | CMP        R2,R1
 2000f20:	78 ab ff d4 	BNZ        @0x02000ef8    // 2000ef8 <_malloc_trim_r+0xb0>
 2000f24:	13 41 df ff 	MOV        $-1+R7,R2
 2000f28:	11 03 ff ff 	XOR        $-1,R2
 2000f2c:	0b 41 40 00 	MOV        R5,R1
 2000f30:	87 fa fc f8 	JSR        0x02001768     // 2001768 <_sbrk_r>
 2000f34:	02 00 17 68 
 2000f38:	0c 03 ff ff 	CMP        $-1,R1
 2000f3c:	78 a8 00 40 	BNZ        @0x02000f80    // 2000f80 <_malloc_trim_r+0x138>
 2000f40:	97 c0 8f a8 	MOV        R8,R2          | MOV        R5,R1
 2000f44:	87 fa fc f8 	JSR        0x02001768     // 2001768 <_sbrk_r>
 2000f48:	02 00 17 68 
 2000f4c:	1c 86 80 08 	LW         8(R10),R3
 2000f50:	97 88 90 98 	MOV        R1,R2          | SUB        R3,R2
 2000f54:	14 00 00 10 	CMP        $16,R2
 2000f58:	78 93 ff 9c 	BLT        @0x02000ef8    // 2000ef8 <_malloc_trim_r+0xb0>
 2000f5c:	22 00 00 40 	LDI        0x02001a0c,R4  // 2001a0c <__malloc_sbrk_base>
 2000f60:	22 40 1a 0c 
 2000f64:	a4 a0 88 a0 	LW         (R4),R4        | SUB        R4,R1
 2000f68:	22 00 10 40 	LDI        0x02082294,R4  // 2082294 <__malloc_current_mallinfo>
 2000f6c:	22 40 22 94 
 2000f70:	0c c5 00 00 	SW         R1,(R4)
 2000f74:	10 c0 00 01 	OR         $1,R2
 2000f78:	14 c4 c0 04 	SW         R2,$4(R3)
 2000f7c:	78 83 ff 78 	BRA        @0x02000ef8    // 2000ef8 <_malloc_trim_r+0xb0>
 2000f80:	0c 86 80 08 	LW         8(R10),R1
 2000f84:	58 05 c0 00 	SUB        R7,R11
 2000f88:	58 c0 00 01 	OR         $1,R11
 2000f8c:	5c c4 40 04 	SW         R11,$4(R1)
 2000f90:	12 00 10 40 	LDI        0x02082294,R2  // 2082294 <__malloc_current_mallinfo>
 2000f94:	12 40 22 94 
 2000f98:	8c 90 88 b8 	LW         (R2),R1        | SUB        R7,R1
 2000f9c:	8d 90 8f a8 	SW         R1,(R2)        | MOV        R5,R1
 2000fa0:	87 fa fc f8 	JSR        0x02000e44     // 2000e44 <__malloc_unlock>
 2000fa4:	02 00 0e 44 
 2000fa8:	0e 00 00 01 	LDI        $1,R1
 2000fac:	84 00 ac 04 	LW         (SP),R0        | LW         4(SP),R5
 2000fb0:	b4 08 bc 0c 	LW         8(SP),R6       | LW         12(SP),R7
 2000fb4:	c4 10 cc 14 	LW         16(SP),R8      | LW         20(SP),R9
 2000fb8:	d4 18 dc 1c 	LW         24(SP),R10     | LW         28(SP),R11
 2000fbc:	e4 20 ea 24 	LW         32(SP),R12     | ADD        $36,SP
 2000fc0:	7b 40 00 00 	RTN

02000fc4 <_free_r>:
 2000fc4:	14 00 00 00 	CMP        $0,R2
 2000fc8:	78 88 03 6c 	BZ         @0x02001338    // 2001338 <_free_r+0x374>
 2000fcc:	78 80 03 6c 	BRA        @0x0200133c    // 200133c <_free_r+0x378>
 2000fd0:	e8 18 85 00 	SUB        $24,SP         | SW         R0,(SP)
 2000fd4:	ad 04 b5 08 	SW         R5,$4(SP)      | SW         R6,$8(SP)
 2000fd8:	bd 0c c5 10 	SW         R7,$12(SP)     | SW         R8,$16(SP)
 2000fdc:	cd 14 bf 88 	SW         R9,$20(SP)     | MOV        R1,R7
 2000fe0:	43 40 80 00 	MOV        R2,R8
 2000fe4:	87 fa fc f8 	JSR        0x02000e40     // 2000e40 <__malloc_lock>
 2000fe8:	02 00 0e 40 
 2000fec:	a7 c0 a2 78 	MOV        R8,R4          | ADD        $-8,R4
 2000ff0:	8c c4 9f 88 	LW         -4(R8),R1      | MOV        R1,R3
 2000ff4:	99 7e b7 a0 	AND        $-2,R3         | MOV        R4,R6
 2000ff8:	30 84 c0 00 	ADD        R3,R6
 2000ffc:	2c 85 80 04 	LW         4(R6),R5
 2001000:	28 43 ff fc 	AND        $-4,R5
 2001004:	4a 00 00 40 	LDI        0x02001a18,R9  // 2001a18 <__malloc_av_>
 2001008:	4a 40 1a 18 
 200100c:	14 86 40 08 	LW         8(R9),R2
 2001010:	34 04 80 00 	CMP        R2,R6
 2001014:	78 a8 00 84 	BNZ        @0x0200109c    // 200109c <_free_r+0xd8>
 2001018:	9a a8 af 98 	ADD        R5,R3          | MOV        R3,R5
 200101c:	08 40 00 01 	AND        $1,R1
 2001020:	78 a8 00 18 	BNZ        @0x0200103c    // 200103c <_free_r+0x78>
 2001024:	0c 86 3f f8 	LW         -8(R8),R1
 2001028:	a0 88 aa 88 	SUB        R1,R4          | ADD        R1,R5
 200102c:	0c 85 00 0c 	LW         12(R4),R1
 2001030:	14 85 00 08 	LW         8(R4),R2
 2001034:	0c c4 80 0c 	SW         R1,$12(R2)
 2001038:	14 c4 40 08 	SW         R2,$8(R1)
 200103c:	0b 41 40 00 	MOV        R5,R1
 2001040:	08 c0 00 01 	OR         $1,R1
 2001044:	0c c5 00 04 	SW         R1,$4(R4)
 2001048:	24 c6 40 08 	SW         R4,$8(R9)
 200104c:	9f a8 96 00 	MOV        R5,R3          | CLR        R2
 2001050:	0a 00 00 40 	LDI        0x02001a10,R1  // 2001a10 <__malloc_trim_threshold>
 2001054:	0a 40 1a 10 
 2001058:	24 84 40 00 	LW         (R1),R4
 200105c:	2c 84 40 04 	LW         4(R1),R5
 2001060:	14 05 00 00 	CMP        R4,R2
 2001064:	1c 0d 40 00 	CMP.Z      R5,R3
 2001068:	78 98 00 18 	BC         @0x02001084    // 2001084 <_free_r+0xc0>
 200106c:	0a 00 10 40 	LDI        0x020822cc,R1  // 20822cc <__malloc_top_pad>
 2001070:	0a 40 22 cc 
 2001074:	14 84 40 04 	LW         4(R1),R2
 2001078:	0b 41 c0 00 	MOV        R7,R1
 200107c:	87 fa fc f8 	JSR        0x02000e48     // 2000e48 <_malloc_trim_r>
 2001080:	02 00 0e 48 
 2001084:	8f b8 84 00 	MOV        R7,R1          | LW         (SP),R0
 2001088:	ac 04 b4 08 	LW         4(SP),R5       | LW         8(SP),R6
 200108c:	bc 0c c4 10 	LW         12(SP),R7      | LW         16(SP),R8
 2001090:	cc 14 ea 18 	LW         20(SP),R9      | ADD        $24,SP
 2001094:	7c 87 c0 00 	LJMP       @0x02000e44    // 2000e44 <__malloc_unlock>
 2001098:	02 00 0e 44 
 200109c:	2c c5 80 04 	SW         R5,$4(R6)
 20010a0:	08 40 00 01 	AND        $1,R1
 20010a4:	78 a8 01 f0 	BNZ        @0x02001298    // 2001298 <_free_r+0x2d4>
 20010a8:	0c 86 3f f8 	LW         -8(R8),R1
 20010ac:	a0 88 9a 88 	SUB        R1,R4          | ADD        R1,R3
 20010b0:	0c 85 00 08 	LW         8(R4),R1
 20010b4:	0c 06 40 08 	CMP        $8+R9,R1
 20010b8:	78 88 02 18 	BZ         @0x020012d4    // 20012d4 <_free_r+0x310>
 20010bc:	14 85 00 0c 	LW         12(R4),R2
 20010c0:	14 c4 40 0c 	SW         R2,$12(R1)
 20010c4:	0c c4 80 08 	SW         R1,$8(R2)
 20010c8:	78 80 01 cc 	BRA        @0x02001298    // 2001298 <_free_r+0x2d4>
 20010cc:	24 c6 40 14 	SW         R4,$20(R9)
 20010d0:	24 c6 40 10 	SW         R4,$16(R9)
 20010d4:	0c c5 00 0c 	SW         R1,$12(R4)
 20010d8:	0c c5 00 08 	SW         R1,$8(R4)
 20010dc:	0b 40 c0 00 	MOV        R3,R1
 20010e0:	08 c0 00 01 	OR         $1,R1
 20010e4:	0c c5 00 04 	SW         R1,$4(R4)
 20010e8:	a2 98 9d a0 	ADD        R3,R4          | SW         R3,(R4)
 20010ec:	78 83 ff 94 	BRA        @0x02001084    // 2001084 <_free_r+0xc0>
 20010f0:	1c 00 02 00 	CMP        $512,R3
 20010f4:	78 b8 00 54 	BNC        @0x0200114c    // 200114c <_free_r+0x188>
 20010f8:	19 40 00 03 	LSR        $3,R3
 20010fc:	0b 40 c0 00 	MOV        R3,R1
 2001100:	09 c0 00 02 	ASR        $2,R1
 2001104:	97 88 92 60 	MOV        R1,R2          | ADD        $-32,R2
 2001108:	78 90 00 08 	BLT        @0x02001114    // 2001114 <_free_r+0x150>
 200110c:	16 00 00 00 	CLR        R2
 2001110:	78 80 00 08 	BRA        @0x0200111c    // 200111c <_free_r+0x158>
 2001114:	16 00 00 01 	LDI        $1,R2
 2001118:	11 84 40 00 	LSL        R1,R2
 200111c:	0c 86 40 04 	LW         4(R9),R1
 2001120:	08 c4 80 00 	OR         R2,R1
 2001124:	0c c6 40 04 	SW         R1,$4(R9)
 2001128:	18 80 00 01 	ADD        $1,R3
 200112c:	19 80 00 03 	LSL        $3,R3
 2001130:	ca 98 8c c8 	ADD        R3,R9          | LW         (R9),R1
 2001134:	97 c8 92 78 	MOV        R9,R2          | ADD        $-8,R2
 2001138:	14 c5 00 0c 	SW         R2,$12(R4)
 200113c:	0c c5 00 08 	SW         R1,$8(R4)
 2001140:	24 c6 40 00 	SW         R4,(R9)
 2001144:	24 c4 40 0c 	SW         R4,$12(R1)
 2001148:	78 83 ff 38 	BRA        @0x02001084    // 2001084 <_free_r+0xc0>
 200114c:	0b 40 c0 00 	MOV        R3,R1
 2001150:	09 40 00 09 	LSR        $9,R1
 2001154:	0c 00 00 05 	CMP        $5,R1
 2001158:	78 b8 00 18 	BNC        @0x02001174    // 2001174 <_free_r+0x1b0>
 200115c:	0b 40 c0 00 	MOV        R3,R1
 2001160:	09 40 00 06 	LSR        $6,R1
 2001164:	af 88 aa 38 	MOV        R1,R5          | ADD        $56,R5
 2001168:	08 80 00 39 	ADD        $57,R1
 200116c:	09 80 00 03 	LSL        $3,R1
 2001170:	78 80 00 90 	BRA        @0x02001204    // 2001204 <_free_r+0x240>
 2001174:	0c 00 00 15 	CMP        $21,R1
 2001178:	78 b8 00 14 	BNC        @0x02001190    // 2001190 <_free_r+0x1cc>
 200117c:	2b 40 40 00 	MOV        R1,R5
 2001180:	28 80 00 5b 	ADD        $91,R5
 2001184:	08 80 00 5c 	ADD        $92,R1
 2001188:	09 80 00 03 	LSL        $3,R1
 200118c:	78 80 00 74 	BRA        @0x02001204    // 2001204 <_free_r+0x240>
 2001190:	0c 00 00 55 	CMP        $85,R1
 2001194:	78 b8 00 1c 	BNC        @0x020011b4    // 20011b4 <_free_r+0x1f0>
 2001198:	0b 40 c0 00 	MOV        R3,R1
 200119c:	09 40 00 0c 	LSR        $12,R1
 20011a0:	2b 40 40 00 	MOV        R1,R5
 20011a4:	28 80 00 6e 	ADD        $110,R5
 20011a8:	08 80 00 6f 	ADD        $111,R1
 20011ac:	09 80 00 03 	LSL        $3,R1
 20011b0:	78 80 00 50 	BRA        @0x02001204    // 2001204 <_free_r+0x240>
 20011b4:	0c 00 01 55 	CMP        $341,R1
 20011b8:	78 b8 00 1c 	BNC        @0x020011d8    // 20011d8 <_free_r+0x214>
 20011bc:	0b 40 c0 00 	MOV        R3,R1
 20011c0:	09 40 00 0f 	LSR        $15,R1
 20011c4:	2b 40 40 00 	MOV        R1,R5
 20011c8:	28 80 00 77 	ADD        $119,R5
 20011cc:	08 80 00 78 	ADD        $120,R1
 20011d0:	09 80 00 03 	LSL        $3,R1
 20011d4:	78 80 00 2c 	BRA        @0x02001204    // 2001204 <_free_r+0x240>
 20011d8:	0c 00 05 55 	CMP        $1365,R1
 20011dc:	78 b8 00 1c 	BNC        @0x020011fc    // 20011fc <_free_r+0x238>
 20011e0:	0b 40 c0 00 	MOV        R3,R1
 20011e4:	09 40 00 12 	LSR        $18,R1
 20011e8:	2b 40 40 00 	MOV        R1,R5
 20011ec:	28 80 00 7c 	ADD        $124,R5
 20011f0:	08 80 00 7d 	ADD        $125,R1
 20011f4:	09 80 00 03 	LSL        $3,R1
 20011f8:	78 80 00 08 	BRA        @0x02001204    // 2001204 <_free_r+0x240>
 20011fc:	0e 00 03 f8 	LDI        $1016,R1
 2001200:	2e 00 00 7e 	LDI        $126,R5
 2001204:	97 c8 92 88 	MOV        R9,R2          | ADD        R1,R2
 2001208:	8f 90 8a 78 	MOV        R2,R1          | ADD        $-8,R1
 200120c:	94 90 8b 90 	LW         (R2),R2        | CMP        R2,R1
 2001210:	78 a8 00 40 	BNZ        @0x02001254    // 2001254 <_free_r+0x290>
 2001214:	29 c0 00 02 	ASR        $2,R5
 2001218:	9f a8 9a 60 	MOV        R5,R3          | ADD        $-32,R3
 200121c:	78 90 00 08 	BLT        @0x02001228    // 2001228 <_free_r+0x264>
 2001220:	2e 00 00 00 	CLR        R5
 2001224:	78 80 00 0c 	BRA        @0x02001234    // 2001234 <_free_r+0x270>
 2001228:	1e 00 00 01 	LDI        $1,R3
 200122c:	19 85 40 00 	LSL        R5,R3
 2001230:	2b 40 c0 00 	MOV        R3,R5
 2001234:	1c 86 40 04 	LW         4(R9),R3
 2001238:	18 c5 40 00 	OR         R5,R3
 200123c:	1c c6 40 04 	SW         R3,$4(R9)
 2001240:	9f 88 8f 90 	MOV        R1,R3          | MOV        R2,R1
 2001244:	78 80 00 20 	BRA        @0x02001268    // 2001268 <_free_r+0x2a4>
 2001248:	14 84 80 08 	LW         8(R2),R2
 200124c:	0c 04 80 00 	CMP        R2,R1
 2001250:	78 88 00 10 	BZ         @0x02001264    // 2001264 <_free_r+0x2a0>
 2001254:	2c 84 80 04 	LW         4(R2),R5
 2001258:	a9 7c 9b a8 	AND        $-4,R5         | CMP        R5,R3
 200125c:	78 9b ff e8 	BC         @0x02001248    // 2001248 <_free_r+0x284>
 2001260:	0b 40 80 00 	MOV        R2,R1
 2001264:	1c 84 40 0c 	LW         12(R1),R3
 2001268:	1c c5 00 0c 	SW         R3,$12(R4)
 200126c:	0c c5 00 08 	SW         R1,$8(R4)
 2001270:	24 c4 c0 08 	SW         R4,$8(R3)
 2001274:	24 c4 40 0c 	SW         R4,$12(R1)
 2001278:	78 83 fe 08 	BRA        @0x02001084    // 2001084 <_free_r+0xc0>
 200127c:	18 85 40 00 	ADD        R5,R3
 2001280:	0c 85 80 08 	LW         8(R6),R1
 2001284:	12 00 00 40 	LDI        0x02001a20,R2  // 2001a20 <__malloc_av_+0x8>
 2001288:	12 40 1a 20 
 200128c:	0c 04 80 00 	CMP        R2,R1
 2001290:	78 a8 00 80 	BNZ        @0x02001314    // 2001314 <_free_r+0x350>
 2001294:	78 83 fe 34 	BRA        @0x020010cc    // 20010cc <_free_r+0x108>
 2001298:	8f b0 8a a8 	MOV        R6,R1          | ADD        R5,R1
 200129c:	0c 84 40 04 	LW         4(R1),R1
 20012a0:	08 40 00 01 	AND        $1,R1
 20012a4:	78 a8 00 40 	BNZ        @0x020012e8    // 20012e8 <_free_r+0x324>
 20012a8:	78 83 ff d0 	BRA        @0x0200127c    // 200127c <_free_r+0x2b8>
 20012ac:	28 84 c0 00 	ADD        R3,R5
 20012b0:	14 85 80 08 	LW         8(R6),R2
 20012b4:	0c 85 80 0c 	LW         12(R6),R1
 20012b8:	0c c4 80 0c 	SW         R1,$12(R2)
 20012bc:	14 c4 40 08 	SW         R2,$8(R1)
 20012c0:	0b 41 40 00 	MOV        R5,R1
 20012c4:	08 c0 00 01 	OR         $1,R1
 20012c8:	0c c5 00 04 	SW         R1,$4(R4)
 20012cc:	a2 a8 ad a0 	ADD        R5,R4          | SW         R5,(R4)
 20012d0:	78 83 fd b0 	BRA        @0x02001084    // 2001084 <_free_r+0xc0>
 20012d4:	8f b0 8a a8 	MOV        R6,R1          | ADD        R5,R1
 20012d8:	0c 84 40 04 	LW         4(R1),R1
 20012dc:	08 40 00 01 	AND        $1,R1
 20012e0:	78 8b ff c8 	BZ         @0x020012ac    // 20012ac <_free_r+0x2e8>
 20012e4:	78 80 00 18 	BRA        @0x02001300    // 2001300 <_free_r+0x33c>
 20012e8:	0b 40 c0 00 	MOV        R3,R1
 20012ec:	08 c0 00 01 	OR         $1,R1
 20012f0:	0c c5 00 04 	SW         R1,$4(R4)
 20012f4:	8f a0 8a 98 	MOV        R4,R1          | ADD        R3,R1
 20012f8:	1c c4 40 00 	SW         R3,(R1)
 20012fc:	78 83 fd f0 	BRA        @0x020010f0    // 20010f0 <_free_r+0x12c>
 2001300:	0b 40 c0 00 	MOV        R3,R1
 2001304:	08 c0 00 01 	OR         $1,R1
 2001308:	0c c5 00 04 	SW         R1,$4(R4)
 200130c:	1c c5 80 00 	SW         R3,(R6)
 2001310:	78 83 fd 70 	BRA        @0x02001084    // 2001084 <_free_r+0xc0>
 2001314:	14 85 80 0c 	LW         12(R6),R2
 2001318:	14 c4 40 0c 	SW         R2,$12(R1)
 200131c:	0c c4 80 08 	SW         R1,$8(R2)
 2001320:	0b 40 c0 00 	MOV        R3,R1
 2001324:	08 c0 00 01 	OR         $1,R1
 2001328:	0c c5 00 04 	SW         R1,$4(R4)
 200132c:	8f a0 8a 98 	MOV        R4,R1          | ADD        R3,R1
 2001330:	1c c4 40 00 	SW         R3,(R1)
 2001334:	78 83 fd b8 	BRA        @0x020010f0    // 20010f0 <_free_r+0x12c>
 2001338:	7b 40 00 00 	RTN
 200133c:	78 83 fc 90 	BRA        @0x02000fd0    // 2000fd0 <_free_r+0xc>

02001340 <_outbyte>:
 2001340:	08 40 00 ff 	AND        $255,R1
 2001344:	0c 00 00 0a 	CMP        $10,R1
 2001348:	78 a8 00 18 	BNZ        @0x02001364    // 2001364 <_outbyte+0x24>
 200134c:	1a 00 03 00 	BREV       $768,R3
 2001350:	14 84 c0 04 	LW         4(R3),R2
 2001354:	10 41 00 00 	AND        $65536,R2
 2001358:	78 ab ff f4 	BNZ        @0x02001350    // 2001350 <_outbyte+0x10>
 200135c:	16 00 00 0d 	LDI        $13,R2
 2001360:	14 c4 c0 0c 	SW         R2,$12(R3)
 2001364:	1a 00 03 00 	BREV       $768,R3
 2001368:	14 84 c0 04 	LW         4(R3),R2
 200136c:	10 41 00 00 	AND        $65536,R2
 2001370:	78 ab ff f4 	BNZ        @0x02001368    // 2001368 <_outbyte+0x28>
 2001374:	0c c4 c0 0c 	SW         R1,$12(R3)
 2001378:	7b 40 00 00 	RTN

0200137c <_inbyte>:
 200137c:	0a 00 03 00 	BREV       $768,R1
 2001380:	0c 84 40 08 	LW         8(R1),R1
 2001384:	13 40 40 00 	MOV        R1,R2
 2001388:	10 40 01 00 	AND        $256,R2
 200138c:	78 a8 00 8c 	BNZ        @0x0200141c    // 200141c <_inbyte+0xa0>
 2001390:	0c 00 00 0d 	CMP        $13,R1
 2001394:	78 a8 00 14 	BNZ        @0x020013ac    // 20013ac <_inbyte+0x30>
 2001398:	0a 00 10 40 	LDI        0x020822d8,R1  // 20822d8 <last_was_cr.2996>
 200139c:	0a 40 22 d8 
 20013a0:	96 01 95 88 	LDI        $1,R2          | SW         R2,(R1)
 20013a4:	a6 0a 8f a0 	LDI        $10,R4         | MOV        R4,R1
 20013a8:	78 80 00 78 	BRA        @0x02001424    // 2001424 <_inbyte+0xa8>
 20013ac:	0c 00 00 0a 	CMP        $10,R1
 20013b0:	78 a8 00 18 	BNZ        @0x020013cc    // 20013cc <_inbyte+0x50>
 20013b4:	1a 00 10 40 	LDI        0x020822d8,R3  // 20822d8 <last_was_cr.2996>
 20013b8:	1a 40 22 d8 
 20013bc:	a4 98 a3 00 	LW         (R3),R4        | CMP        $0,R4
 20013c0:	78 88 00 5c 	BZ         @0x02001420    // 2001420 <_inbyte+0xa4>
 20013c4:	95 98 8e ff 	SW         R2,(R3)        | LDI        $-1,R1
 20013c8:	7b 40 00 00 	RTN
 20013cc:	1a 00 10 40 	LDI        0x020822d8,R3  // 20822d8 <last_was_cr.2996>
 20013d0:	1a 40 22 d8 
 20013d4:	95 98 97 88 	SW         R2,(R3)        | MOV        R1,R2
 20013d8:	10 40 00 ff 	AND        $255,R2
 20013dc:	23 40 40 00 	MOV        R1,R4
 20013e0:	20 40 00 ff 	AND        $255,R4
 20013e4:	14 00 00 0a 	CMP        $10,R2
 20013e8:	78 a8 00 18 	BNZ        @0x02001404    // 2001404 <_inbyte+0x88>
 20013ec:	78 80 00 34 	BRA        @0x02001424    // 2001424 <_inbyte+0xa8>
 20013f0:	14 84 c0 04 	LW         4(R3),R2
 20013f4:	10 41 00 00 	AND        $65536,R2
 20013f8:	78 ab ff f4 	BNZ        @0x020013f0    // 20013f0 <_inbyte+0x74>
 20013fc:	16 00 00 0d 	LDI        $13,R2
 2001400:	14 c4 c0 0c 	SW         R2,$12(R3)
 2001404:	1a 00 03 00 	BREV       $768,R3
 2001408:	14 84 c0 04 	LW         4(R3),R2
 200140c:	10 41 00 00 	AND        $65536,R2
 2001410:	78 ab ff f4 	BNZ        @0x02001408    // 2001408 <_inbyte+0x8c>
 2001414:	24 c4 c0 0c 	SW         R4,$12(R3)
 2001418:	7b 40 00 00 	RTN
 200141c:	8e ff ff 80 	LDI        $-1,R1         | RTN
 2001420:	23 40 40 00 	MOV        R1,R4
 2001424:	1a 00 03 00 	BREV       $768,R3
 2001428:	78 83 ff c4 	BRA        @0x020013f0    // 20013f0 <_inbyte+0x74>

0200142c <_close_r>:
 200142c:	96 09 95 88 	LDI        $9,R2          | SW         R2,(R1)
 2001430:	8e ff ff 80 	LDI        $-1,R1         | RTN

02001434 <_execve_r>:
 2001434:	96 58 95 88 	LDI        $88,R2         | SW         R2,(R1)
 2001438:	8e ff ff 80 	LDI        $-1,R1         | RTN

0200143c <_fork_r>:
 200143c:	96 58 95 88 	LDI        $88,R2         | SW         R2,(R1)
 2001440:	8e ff ff 80 	LDI        $-1,R1         | RTN

02001444 <_fstat_r>:
 2001444:	14 00 00 03 	CMP        $3,R2
 2001448:	78 b8 00 0c 	BNC        @0x02001458    // 2001458 <_fstat_r+0x14>
 200144c:	0e 00 20 00 	LDI        $8192,R1
 2001450:	0c c4 c0 04 	SW         R1,$4(R3)
 2001454:	8e 00 ff 80 	CLR        R1             | RTN
 2001458:	96 09 95 88 	LDI        $9,R2          | SW         R2,(R1)
 200145c:	0e 7f ff ff 	LDI        $-1,R1
 2001460:	7b 40 00 00 	RTN

02001464 <_getpid_r>:
 2001464:	8e 01 ff 80 	LDI        $1,R1          | RTN

02001468 <_gettimeofday_r>:
 2001468:	96 58 95 88 	LDI        $88,R2         | SW         R2,(R1)
 200146c:	8e ff ff 80 	LDI        $-1,R1         | RTN

02001470 <_isatty_r>:
 2001470:	93 03 8e 00 	CMP        $3,R2          | CLR        R1
 2001474:	0a 58 00 01 	LDILO.C    $1,R1
 2001478:	7b 40 00 00 	RTN

0200147c <_kill_r>:
 200147c:	96 58 95 88 	LDI        $88,R2         | SW         R2,(R1)
 2001480:	8e ff ff 80 	LDI        $-1,R1         | RTN

02001484 <_link_r>:
 2001484:	96 58 95 88 	LDI        $88,R2         | SW         R2,(R1)
 2001488:	8e ff ff 80 	LDI        $-1,R1         | RTN

0200148c <_lseek_r>:
 200148c:	96 58 95 88 	LDI        $88,R2         | SW         R2,(R1)
 2001490:	8e ff 96 ff 	LDI        $-1,R1         | LDI        $-1,R2
 2001494:	7b 40 00 00 	RTN

02001498 <_open_r>:
 2001498:	96 58 95 88 	LDI        $88,R2         | SW         R2,(R1)
 200149c:	8e ff ff 80 	LDI        $-1,R1         | RTN

020014a0 <_read_r>:
 20014a0:	e8 24 85 00 	SUB        $36,SP         | SW         R0,(SP)
 20014a4:	ad 04 b5 08 	SW         R5,$4(SP)      | SW         R6,$8(SP)
 20014a8:	bd 0c c5 10 	SW         R7,$12(SP)     | SW         R8,$16(SP)
 20014ac:	cd 14 d5 18 	SW         R9,$20(SP)     | SW         R10,$24(SP)
 20014b0:	dd 1c e5 20 	SW         R11,$28(SP)    | SW         R12,$32(SP)
 20014b4:	14 00 00 00 	CMP        $0,R2
 20014b8:	78 a8 01 a0 	BNZ        @0x0200165c    // 200165c <_read_r+0x1bc>
 20014bc:	0a 00 10 40 	LDI        0x020822d8,R1  // 20822d8 <last_was_cr.2996>
 20014c0:	0a 40 22 d8 
 20014c4:	44 84 40 00 	LW         (R1),R8
 20014c8:	2a 00 03 00 	BREV       $768,R5
 20014cc:	cf 90 b6 01 	MOV        R2,R9          | LDI        $1,R6
 20014d0:	0c 85 40 08 	LW         8(R5),R1
 20014d4:	3b 40 40 00 	MOV        R1,R7
 20014d8:	38 40 01 00 	AND        $256,R7
 20014dc:	78 ab ff f0 	BNZ        @0x020014d0    // 20014d0 <_read_r+0x30>
 20014e0:	0c 00 00 0d 	CMP        $13,R1
 20014e4:	78 88 00 38 	BZ         @0x02001520    // 2001520 <_read_r+0x80>
 20014e8:	0c 00 00 0a 	CMP        $10,R1
 20014ec:	78 a8 00 10 	BNZ        @0x02001500    // 2001500 <_read_r+0x60>
 20014f0:	44 00 00 00 	CMP        $0,R8
 20014f4:	78 a8 01 78 	BNZ        @0x02001670    // 2001670 <_read_r+0x1d0>
 20014f8:	33 40 40 00 	MOV        R1,R6
 20014fc:	78 80 00 28 	BRA        @0x02001528    // 2001528 <_read_r+0x88>
 2001500:	43 40 40 00 	MOV        R1,R8
 2001504:	40 40 00 ff 	AND        $255,R8
 2001508:	33 40 40 00 	MOV        R1,R6
 200150c:	30 40 00 ff 	AND        $255,R6
 2001510:	96 01 c3 0a 	LDI        $1,R2          | CMP        $10,R8
 2001514:	78 a8 00 30 	BNZ        @0x02001548    // 2001548 <_read_r+0xa8>
 2001518:	c7 b8 96 01 	MOV        R7,R8          | LDI        $1,R2
 200151c:	78 80 00 08 	BRA        @0x02001528    // 2001528 <_read_r+0x88>
 2001520:	96 01 c6 01 	LDI        $1,R2          | LDI        $1,R8
 2001524:	36 00 00 0a 	LDI        $10,R6
 2001528:	2a 00 03 00 	BREV       $768,R5
 200152c:	0c 85 40 04 	LW         4(R5),R1
 2001530:	08 41 00 00 	AND        $65536,R1
 2001534:	78 ab ff f4 	BNZ        @0x0200152c    // 200152c <_read_r+0x8c>
 2001538:	0e 00 00 0d 	LDI        $13,R1
 200153c:	0c c5 40 0c 	SW         R1,$12(R5)
 2001540:	bf c0 c6 0a 	MOV        R8,R7          | LDI        $10,R8
 2001544:	78 80 00 00 	BRA        @0x02001548    // 2001548 <_read_r+0xa8>
 2001548:	2a 00 03 00 	BREV       $768,R5
 200154c:	0c 85 40 04 	LW         4(R5),R1
 2001550:	08 41 00 00 	AND        $65536,R1
 2001554:	78 ab ff f4 	BNZ        @0x0200154c    // 200154c <_read_r+0xac>
 2001558:	34 c5 40 0c 	SW         R6,$12(R5)
 200155c:	14 00 00 00 	CMP        $0,R2
 2001560:	12 28 10 40 	LDI.NZ     0x020822d8,R2  // 20822d8 <last_was_cr.2996>
 2001564:	12 68 22 d8 
 2001568:	3c ec 80 00 	SW.NZ      R7,(R2)
 200156c:	b7 98 b2 01 	MOV        R3,R6          | ADD        $1,R6
 2001570:	45 c4 c0 00 	SB         R8,(R3)
 2001574:	8e 01 a3 02 	LDI        $1,R1          | CMP        $2,R4
 2001578:	78 98 01 0c 	BC         @0x02001688    // 2001688 <_read_r+0x1e8>
 200157c:	78 80 00 18 	BRA        @0x02001598    // 2001598 <_read_r+0xf8>
 2001580:	4c 00 00 00 	CMP        $0,R9
 2001584:	78 88 01 00 	BZ         @0x02001688    // 2001688 <_read_r+0x1e8>
 2001588:	1a 00 10 40 	LDI        0x020822d8,R3  // 20822d8 <last_was_cr.2996>
 200158c:	1a 40 22 d8 
 2001590:	44 c4 c0 00 	SW         R8,(R3)
 2001594:	78 80 00 f0 	BRA        @0x02001688    // 2001688 <_read_r+0x1e8>
 2001598:	0a 00 10 40 	LDI        0x020822d8,R1  // 20822d8 <last_was_cr.2996>
 200159c:	0a 40 22 d8 
 20015a0:	c4 88 ce 00 	LW         (R1),R8        | CLR        R9
 20015a4:	0e 00 00 01 	LDI        $1,R1
 20015a8:	1a 00 03 00 	BREV       $768,R3
 20015ac:	de 0a d6 01 	LDI        $10,R11        | LDI        $1,R10
 20015b0:	66 00 00 01 	LDI        $1,R12
 20015b4:	2c 84 c0 08 	LW         8(R3),R5
 20015b8:	13 41 40 00 	MOV        R5,R2
 20015bc:	10 40 01 00 	AND        $256,R2
 20015c0:	78 a8 00 b4 	BNZ        @0x02001678    // 2001678 <_read_r+0x1d8>
 20015c4:	2c 00 00 0d 	CMP        $13,R5
 20015c8:	78 88 00 3c 	BZ         @0x02001608    // 2001608 <_read_r+0x168>
 20015cc:	2c 00 00 0a 	CMP        $10,R5
 20015d0:	78 a8 00 18 	BNZ        @0x020015ec    // 20015ec <_read_r+0x14c>
 20015d4:	44 00 00 00 	CMP        $0,R8
 20015d8:	78 88 00 38 	BZ         @0x02001614    // 2001614 <_read_r+0x174>
 20015dc:	1a 00 10 40 	LDI        0x020822d8,R3  // 20822d8 <last_was_cr.2996>
 20015e0:	1a 40 22 d8 
 20015e4:	14 c4 c0 00 	SW         R2,(R3)
 20015e8:	78 80 00 9c 	BRA        @0x02001688    // 2001688 <_read_r+0x1e8>
 20015ec:	3b 41 40 00 	MOV        R5,R7
 20015f0:	38 40 00 ff 	AND        $255,R7
 20015f4:	28 40 00 ff 	AND        $255,R5
 20015f8:	c6 00 cf d0 	CLR        R8             | MOV        R10,R9
 20015fc:	3c 00 00 0a 	CMP        $10,R7
 2001600:	78 88 00 14 	BZ         @0x02001618    // 2001618 <_read_r+0x178>
 2001604:	78 80 00 2c 	BRA        @0x02001634    // 2001634 <_read_r+0x194>
 2001608:	af d8 cf d0 	MOV        R11,R5         | MOV        R10,R9
 200160c:	43 43 00 00 	MOV        R12,R8
 2001610:	78 80 00 04 	BRA        @0x02001618    // 2001618 <_read_r+0x178>
 2001614:	2b 42 c0 00 	MOV        R11,R5
 2001618:	14 84 c0 04 	LW         4(R3),R2
 200161c:	10 41 00 00 	AND        $65536,R2
 2001620:	78 ab ff f4 	BNZ        @0x02001618    // 2001618 <_read_r+0x178>
 2001624:	16 00 00 0d 	LDI        $13,R2
 2001628:	14 c4 c0 0c 	SW         R2,$12(R3)
 200162c:	3b 42 c0 00 	MOV        R11,R7
 2001630:	78 80 00 04 	BRA        @0x02001638    // 2001638 <_read_r+0x198>
 2001634:	c6 00 cf d0 	CLR        R8             | MOV        R10,R9
 2001638:	14 84 c0 04 	LW         4(R3),R2
 200163c:	10 41 00 00 	AND        $65536,R2
 2001640:	78 ab ff f4 	BNZ        @0x02001638    // 2001638 <_read_r+0x198>
 2001644:	2c c4 c0 0c 	SW         R5,$12(R3)
 2001648:	30 80 00 01 	ADD        $1,R6
 200164c:	3d c5 bf ff 	SB         R7,$-1(R6)
 2001650:	8a 01 8b a0 	ADD        $1,R1          | CMP        R4,R1
 2001654:	78 ab ff 5c 	BNZ        @0x020015b4    // 20015b4 <_read_r+0x114>
 2001658:	78 83 ff 24 	BRA        @0x02001580    // 2001580 <_read_r+0xe0>
 200165c:	87 fa fc f8 	JSR        0x0200179c     // 200179c <__errno>
 2001660:	02 00 17 9c 
 2001664:	9e 58 9d 88 	LDI        $88,R3         | SW         R3,(R1)
 2001668:	0e 7f ff ff 	LDI        $-1,R1
 200166c:	78 80 00 18 	BRA        @0x02001688    // 2001688 <_read_r+0x1e8>
 2001670:	c7 c8 97 b0 	MOV        R9,R8          | MOV        R6,R2
 2001674:	78 83 fe 58 	BRA        @0x020014d0    // 20014d0 <_read_r+0x30>
 2001678:	4c 00 00 00 	CMP        $0,R9
 200167c:	12 28 10 40 	LDI.NZ     0x020822d8,R2  // 20822d8 <last_was_cr.2996>
 2001680:	12 68 22 d8 
 2001684:	44 ec 80 00 	SW.NZ      R8,(R2)
 2001688:	84 00 ac 04 	LW         (SP),R0        | LW         4(SP),R5
 200168c:	b4 08 bc 0c 	LW         8(SP),R6       | LW         12(SP),R7
 2001690:	c4 10 cc 14 	LW         16(SP),R8      | LW         20(SP),R9
 2001694:	d4 18 dc 1c 	LW         24(SP),R10     | LW         28(SP),R11
 2001698:	e4 20 ea 24 	LW         32(SP),R12     | ADD        $36,SP
 200169c:	7b 40 00 00 	RTN

020016a0 <_readlink_r>:
 20016a0:	96 58 95 88 	LDI        $88,R2         | SW         R2,(R1)
 20016a4:	8e ff ff 80 	LDI        $-1,R1         | RTN

020016a8 <_stat_r>:
 20016a8:	96 05 95 88 	LDI        $5,R2          | SW         R2,(R1)
 20016ac:	8e ff ff 80 	LDI        $-1,R1         | RTN

020016b0 <_unlink_r>:
 20016b0:	96 05 95 88 	LDI        $5,R2          | SW         R2,(R1)
 20016b4:	8e ff ff 80 	LDI        $-1,R1         | RTN

020016b8 <_times>:
 20016b8:	e8 04 85 00 	SUB        $4,SP          | SW         R0,(SP)
 20016bc:	87 fa fc f8 	JSR        0x0200179c     // 200179c <__errno>
 20016c0:	02 00 17 9c 
 20016c4:	96 0d 95 88 	LDI        $13,R2         | SW         R2,(R1)
 20016c8:	8e ff 84 00 	LDI        $-1,R1         | LW         (SP),R0
 20016cc:	ea 04 ff 80 	ADD        $4,SP          | RTN

020016d0 <_write_r>:
 20016d0:	92 7f 93 02 	ADD        $-1,R2         | CMP        $2,R2
 20016d4:	78 b8 00 60 	BNC        @0x02001738    // 2001738 <_write_r+0x68>
 20016d8:	24 00 00 00 	CMP        $0,R4
 20016dc:	78 a8 00 0c 	BNZ        @0x020016ec    // 20016ec <_write_r+0x1c>
 20016e0:	78 80 00 64 	BRA        @0x02001748    // 2001748 <_write_r+0x78>
 20016e4:	0b 41 00 00 	MOV        R4,R1
 20016e8:	78 80 00 54 	BRA        @0x02001740    // 2001740 <_write_r+0x70>
 20016ec:	e8 08 ad 00 	SUB        $8,SP          | SW         R5,(SP)
 20016f0:	b5 04 b7 98 	SW         R6,$4(SP)      | MOV        R3,R6
 20016f4:	30 85 00 00 	ADD        R4,R6
 20016f8:	0a 00 03 00 	BREV       $768,R1
 20016fc:	2d 84 c0 00 	LB         (R3),R5
 2001700:	2c 00 00 0a 	CMP        $10,R5
 2001704:	78 a8 00 14 	BNZ        @0x0200171c    // 200171c <_write_r+0x4c>
 2001708:	14 84 40 04 	LW         4(R1),R2
 200170c:	10 41 00 00 	AND        $65536,R2
 2001710:	78 ab ff f4 	BNZ        @0x02001708    // 2001708 <_write_r+0x38>
 2001714:	16 00 00 0d 	LDI        $13,R2
 2001718:	14 c4 40 0c 	SW         R2,$12(R1)
 200171c:	14 84 40 04 	LW         4(R1),R2
 2001720:	10 41 00 00 	AND        $65536,R2
 2001724:	78 ab ff f4 	BNZ        @0x0200171c    // 200171c <_write_r+0x4c>
 2001728:	2c c4 40 0c 	SW         R5,$12(R1)
 200172c:	9a 01 b3 98 	ADD        $1,R3          | CMP        R3,R6
 2001730:	78 ab ff c8 	BNZ        @0x020016fc    // 20016fc <_write_r+0x2c>
 2001734:	78 83 ff ac 	BRA        @0x020016e4    // 20016e4 <_write_r+0x14>
 2001738:	96 09 95 88 	LDI        $9,R2          | SW         R2,(R1)
 200173c:	8e ff ff 80 	LDI        $-1,R1         | RTN
 2001740:	ac 00 b4 04 	LW         (SP),R5        | LW         4(SP),R6
 2001744:	ea 08 ff 80 	ADD        $8,SP          | RTN
 2001748:	0b 41 00 00 	MOV        R4,R1
 200174c:	7b 40 00 00 	RTN

02001750 <_wait>:
 2001750:	e8 04 85 00 	SUB        $4,SP          | SW         R0,(SP)
 2001754:	87 fa fc f8 	JSR        0x0200179c     // 200179c <__errno>
 2001758:	02 00 17 9c 
 200175c:	96 0a 95 88 	LDI        $10,R2         | SW         R2,(R1)
 2001760:	8e ff 84 00 	LDI        $-1,R1         | LW         (SP),R0
 2001764:	ea 04 ff 80 	ADD        $4,SP          | RTN

02001768 <_sbrk_r>:
 2001768:	1a 00 00 40 	LDI        0x02002254,R3  // 2002254 <heap>
 200176c:	1a 40 22 54 
 2001770:	0c 84 c0 00 	LW         (R3),R1
 2001774:	11 80 00 02 	LSL        $2,R2
 2001778:	a7 88 a2 90 	MOV        R1,R4          | ADD        R2,R4
 200177c:	a5 98 ff 80 	SW         R4,(R3)        | RTN

02001780 <_exit>:
 2001780:	e8 04 85 00 	SUB        $4,SP          | SW         R0,(SP)
 2001784:	1a 00 03 00 	BREV       $768,R3
 2001788:	14 84 c0 0c 	LW         12(R3),R2
 200178c:	10 40 01 00 	AND        $256,R2
 2001790:	78 ab ff f4 	BNZ        @0x02001788    // 2001788 <_exit+0x8>
 2001794:	87 fa fc f8 	JSR        0x0200002c     // 200002c <_hw_shutdown>
 2001798:	02 00 00 2c 

0200179c <__errno>:
 200179c:	0a 00 00 40 	LDI        0x02001e20,R1  // 2001e20 <_impure_ptr>
 20017a0:	0a 40 1e 20 
 20017a4:	8c 88 ff 80 	LW         (R1),R1        | RTN

020017a8 <exit>:
 20017a8:	e8 08 85 00 	SUB        $8,SP          | SW         R0,(SP)
 20017ac:	ad 04 af 88 	SW         R5,$4(SP)      | MOV        R1,R5
 20017b0:	16 00 00 00 	CLR        R2
 20017b4:	87 fa fc f8 	JSR        0x020017e4     // 20017e4 <__call_exitprocs>
 20017b8:	02 00 17 e4 
 20017bc:	0a 00 00 40 	LDI        0x02001a08,R1  // 2001a08 <_global_impure_ptr>
 20017c0:	0a 40 1a 08 
 20017c4:	0c 84 40 00 	LW         (R1),R1
 20017c8:	14 84 40 3c 	LW         60(R1),R2
 20017cc:	14 00 00 00 	CMP        $0,R2
 20017d0:	78 88 00 04 	BZ         @0x020017d8    // 20017d8 <exit+0x30>
 20017d4:	87 f9 ff 90 	JSR        R2
 20017d8:	0b 41 40 00 	MOV        R5,R1
 20017dc:	87 fa fc f8 	JSR        0x02001780     // 2001780 <_exit>
 20017e0:	02 00 17 80 

020017e4 <__call_exitprocs>:
 20017e4:	e8 2c 85 08 	SUB        $44,SP         | SW         R0,$8(SP)
 20017e8:	ad 0c b5 10 	SW         R5,$12(SP)     | SW         R6,$16(SP)
 20017ec:	bd 14 c5 18 	SW         R7,$20(SP)     | SW         R8,$24(SP)
 20017f0:	cd 1c d5 20 	SW         R9,$28(SP)     | SW         R10,$32(SP)
 20017f4:	dd 24 e5 28 	SW         R11,$36(SP)    | SW         R12,$40(SP)
 20017f8:	df 88 c7 90 	MOV        R1,R11         | MOV        R2,R8
 20017fc:	0a 00 00 40 	LDI        0x02001a08,R1  // 2001a08 <_global_impure_ptr>
 2001800:	0a 40 1a 08 
 2001804:	8c 88 8d 00 	LW         (R1),R1        | SW         R1,(SP)
 2001808:	08 80 01 48 	ADD        $328,R1
 200180c:	8d 04 d6 01 	SW         R1,$4(SP)      | LDI        $1,R10
 2001810:	78 80 00 04 	BRA        @0x02001818    // 2001818 <__call_exitprocs+0x34>
 2001814:	78 80 00 00 	BRA        @0x02001818    // 2001818 <__call_exitprocs+0x34>
 2001818:	0c 87 40 00 	LW         (SP),R1
 200181c:	3c 84 41 48 	LW         328(R1),R7
 2001820:	3c 00 00 00 	CMP        $0,R7
 2001824:	78 88 01 c8 	BZ         @0x020019f0    // 20019f0 <__call_exitprocs+0x20c>
 2001828:	64 87 40 04 	LW         4(SP),R12
 200182c:	0c 85 c0 04 	LW         4(R7),R1
 2001830:	af 88 aa 7f 	MOV        R1,R5          | ADD        $-1,R5
 2001834:	78 b0 00 18 	BGE        @0x02001850    // 2001850 <__call_exitprocs+0x6c>
 2001838:	78 80 00 00 	BRA        @0x0200183c    // 200183c <__call_exitprocs+0x58>
 200183c:	0a 00 00 40 	LDI        0x02000468,R1  // 2000468 <free>
 2001840:	0a 40 04 68 
 2001844:	0c 00 00 00 	CMP        $0,R1
 2001848:	78 a8 01 48 	BNZ        @0x02001994    // 2001994 <__call_exitprocs+0x1b0>
 200184c:	78 80 01 a0 	BRA        @0x020019f0    // 20019f0 <__call_exitprocs+0x20c>
 2001850:	44 00 00 00 	CMP        $0,R8
 2001854:	78 a8 00 ac 	BNZ        @0x02001904    // 2001904 <__call_exitprocs+0x120>
 2001858:	97 88 92 01 	MOV        R1,R2          | ADD        $1,R2
 200185c:	11 80 00 02 	LSL        $2,R2
 2001860:	b7 b8 b2 90 	MOV        R7,R6          | ADD        R2,R6
 2001864:	9c b0 cf 88 	LW         (R6),R3        | MOV        R1,R9
 2001868:	2c 04 7f ff 	CMP        $-1+R1,R5
 200186c:	78 a8 00 6c 	BNZ        @0x020018dc    // 20018dc <__call_exitprocs+0xf8>
 2001870:	78 80 00 70 	BRA        @0x020018e4    // 20018e4 <__call_exitprocs+0x100>
 2001874:	1c 00 00 00 	CMP        $0,R3
 2001878:	78 88 00 74 	BZ         @0x020018f0    // 20018f0 <__call_exitprocs+0x10c>
 200187c:	0b 42 80 00 	MOV        R10,R1
 2001880:	09 85 40 00 	LSL        R5,R1
 2001884:	14 85 c1 88 	LW         392(R7),R2
 2001888:	87 88 81 90 	MOV        R1,R0          | AND        R2,R0
 200188c:	78 88 00 44 	BZ         @0x020018d4    // 20018d4 <__call_exitprocs+0xf0>
 2001890:	78 80 00 18 	BRA        @0x020018ac    // 20018ac <__call_exitprocs+0xc8>
 2001894:	0c 85 c0 04 	LW         4(R7),R1
 2001898:	0c 06 40 00 	CMP        R9,R1
 200189c:	78 ab ff 74 	BNZ        @0x02001814    // 2001814 <__call_exitprocs+0x30>
 20018a0:	8c e0 8b b8 	LW         (R12),R1       | CMP        R7,R1
 20018a4:	78 88 00 48 	BZ         @0x020018f0    // 20018f0 <__call_exitprocs+0x10c>
 20018a8:	78 83 ff 6c 	BRA        @0x02001818    // 2001818 <__call_exitprocs+0x34>
 20018ac:	14 85 c1 8c 	LW         396(R7),R2
 20018b0:	08 44 80 00 	AND        R2,R1
 20018b4:	78 88 00 0c 	BZ         @0x020018c4    // 20018c4 <__call_exitprocs+0xe0>
 20018b8:	0c 85 80 80 	LW         128(R6),R1
 20018bc:	87 f9 ff 98 	JSR        R3
 20018c0:	78 83 ff d0 	BRA        @0x02001894    // 2001894 <__call_exitprocs+0xb0>
 20018c4:	14 85 80 80 	LW         128(R6),R2
 20018c8:	0b 42 c0 00 	MOV        R11,R1
 20018cc:	87 f9 ff 98 	JSR        R3
 20018d0:	78 83 ff c0 	BRA        @0x02001894    // 2001894 <__call_exitprocs+0xb0>
 20018d4:	87 f9 ff 98 	JSR        R3
 20018d8:	78 83 ff b8 	BRA        @0x02001894    // 2001894 <__call_exitprocs+0xb0>
 20018dc:	8e 00 8d b0 	CLR        R1             | SW         R1,(R6)
 20018e0:	78 83 ff 90 	BRA        @0x02001874    // 2001874 <__call_exitprocs+0x90>
 20018e4:	2c c5 c0 04 	SW         R5,$4(R7)
 20018e8:	4b 41 40 00 	MOV        R5,R9
 20018ec:	78 83 ff 84 	BRA        @0x02001874    // 2001874 <__call_exitprocs+0x90>
 20018f0:	aa 7f b2 7c 	ADD        $-1,R5         | ADD        $-4,R6
 20018f4:	2c 03 ff ff 	CMP        $-1,R5
 20018f8:	78 8b ff 40 	BZ         @0x0200183c    // 200183c <__call_exitprocs+0x58>
 20018fc:	0c 85 c0 04 	LW         4(R7),R1
 2001900:	78 83 ff 60 	BRA        @0x02001864    // 2001864 <__call_exitprocs+0x80>
 2001904:	08 80 00 01 	ADD        $1,R1
 2001908:	09 80 00 02 	LSL        $2,R1
 200190c:	b7 b8 b2 88 	MOV        R7,R6          | ADD        R1,R6
 2001910:	0c 85 81 00 	LW         256(R6),R1
 2001914:	44 04 40 00 	CMP        R1,R8
 2001918:	78 88 00 10 	BZ         @0x0200192c    // 200192c <__call_exitprocs+0x148>
 200191c:	aa 7f b2 7c 	ADD        $-1,R5         | ADD        $-4,R6
 2001920:	2c 03 ff ff 	CMP        $-1,R5
 2001924:	78 ab ff e8 	BNZ        @0x02001910    // 2001910 <__call_exitprocs+0x12c>
 2001928:	78 83 ff 10 	BRA        @0x0200183c    // 200183c <__call_exitprocs+0x58>
 200192c:	1c 85 80 00 	LW         (R6),R3
 2001930:	4c 85 c0 04 	LW         4(R7),R9
 2001934:	8f c8 8a 7f 	MOV        R9,R1          | ADD        $-1,R1
 2001938:	0c 05 40 00 	CMP        R5,R1
 200193c:	2c cd c0 04 	SW.Z       R5,$4(R7)
 2001940:	4b 49 40 00 	MOV.Z      R5,R9
 2001944:	0a 28 00 00 	CLR.NZ     $0,R1
 2001948:	0c ed 80 00 	SW.NZ      R1,(R6)
 200194c:	78 80 00 94 	BRA        @0x020019e4    // 20019e4 <__call_exitprocs+0x200>
 2001950:	87 f9 ff 98 	JSR        R3
 2001954:	78 80 00 24 	BRA        @0x0200197c    // 200197c <__call_exitprocs+0x198>
 2001958:	14 85 c1 8c 	LW         396(R7),R2
 200195c:	08 44 80 00 	AND        R2,R1
 2001960:	78 a8 00 10 	BNZ        @0x02001974    // 2001974 <__call_exitprocs+0x190>
 2001964:	14 85 80 80 	LW         128(R6),R2
 2001968:	0b 42 c0 00 	MOV        R11,R1
 200196c:	87 f9 ff 98 	JSR        R3
 2001970:	78 80 00 08 	BRA        @0x0200197c    // 200197c <__call_exitprocs+0x198>
 2001974:	0c 85 80 80 	LW         128(R6),R1
 2001978:	87 f9 ff 98 	JSR        R3
 200197c:	0c 85 c0 04 	LW         4(R7),R1
 2001980:	0c 06 40 00 	CMP        R9,R1
 2001984:	78 ab fe 90 	BNZ        @0x02001818    // 2001818 <__call_exitprocs+0x34>
 2001988:	8c e0 8b b8 	LW         (R12),R1       | CMP        R7,R1
 200198c:	78 8b ff 8c 	BZ         @0x0200191c    // 200191c <__call_exitprocs+0x138>
 2001990:	78 83 fe 84 	BRA        @0x02001818    // 2001818 <__call_exitprocs+0x34>
 2001994:	0c 85 c0 04 	LW         4(R7),R1
 2001998:	0c 00 00 00 	CMP        $0,R1
 200199c:	78 a8 00 1c 	BNZ        @0x020019bc    // 20019bc <__call_exitprocs+0x1d8>
 20019a0:	8c b8 8b 00 	LW         (R7),R1        | CMP        $0,R1
 20019a4:	78 88 00 48 	BZ         @0x020019f0    // 20019f0 <__call_exitprocs+0x20c>
 20019a8:	8d e0 8f b8 	SW         R1,(R12)       | MOV        R7,R1
 20019ac:	87 fa fc f8 	JSR        0x02000468     // 2000468 <free>
 20019b0:	02 00 04 68 
 20019b4:	3c 87 00 00 	LW         (R12),R7
 20019b8:	78 80 00 04 	BRA        @0x020019c0    // 20019c0 <__call_exitprocs+0x1dc>
 20019bc:	e7 b8 bc b8 	MOV        R7,R12         | LW         (R7),R7
 20019c0:	3c 00 00 00 	CMP        $0,R7
 20019c4:	78 ab fe 64 	BNZ        @0x0200182c    // 200182c <__call_exitprocs+0x48>
 20019c8:	78 80 00 24 	BRA        @0x020019f0    // 20019f0 <__call_exitprocs+0x20c>
 20019cc:	0b 42 80 00 	MOV        R10,R1
 20019d0:	09 85 40 00 	LSL        R5,R1
 20019d4:	14 85 c1 88 	LW         392(R7),R2
 20019d8:	87 88 81 90 	MOV        R1,R0          | AND        R2,R0
 20019dc:	78 8b ff 70 	BZ         @0x02001950    // 2001950 <__call_exitprocs+0x16c>
 20019e0:	78 83 ff 74 	BRA        @0x02001958    // 2001958 <__call_exitprocs+0x174>
 20019e4:	1c 00 00 00 	CMP        $0,R3
 20019e8:	78 ab ff e0 	BNZ        @0x020019cc    // 20019cc <__call_exitprocs+0x1e8>
 20019ec:	78 83 ff 2c 	BRA        @0x0200191c    // 200191c <__call_exitprocs+0x138>
 20019f0:	84 08 ac 0c 	LW         8(SP),R0       | LW         12(SP),R5
 20019f4:	b4 10 bc 14 	LW         16(SP),R6      | LW         20(SP),R7
 20019f8:	c4 18 cc 1c 	LW         24(SP),R8      | LW         28(SP),R9
 20019fc:	d4 20 dc 24 	LW         32(SP),R10     | LW         36(SP),R11
 2001a00:	e4 28 ea 2c 	LW         40(SP),R12     | ADD        $44,SP
 2001a04:	7b 40 00 00 	RTN

02001a08 <_global_impure_ptr>:
 2001a08:	02 00 1e 24                                         ...$

02001a0c <__malloc_sbrk_base>:
 2001a0c:	ff ff ff ff                                         ....

02001a10 <__malloc_trim_threshold>:
 2001a10:	00 00 00 00 00 02 00 00                             ........

02001a18 <__malloc_av_>:
	...
 2001a20:	02 00 1a 18 02 00 1a 18 02 00 1a 20 02 00 1a 20     ........... ... 
 2001a30:	02 00 1a 28 02 00 1a 28 02 00 1a 30 02 00 1a 30     ...(...(...0...0
 2001a40:	02 00 1a 38 02 00 1a 38 02 00 1a 40 02 00 1a 40     ...8...8...@...@
 2001a50:	02 00 1a 48 02 00 1a 48 02 00 1a 50 02 00 1a 50     ...H...H...P...P
 2001a60:	02 00 1a 58 02 00 1a 58 02 00 1a 60 02 00 1a 60     ...X...X...`...`
 2001a70:	02 00 1a 68 02 00 1a 68 02 00 1a 70 02 00 1a 70     ...h...h...p...p
 2001a80:	02 00 1a 78 02 00 1a 78 02 00 1a 80 02 00 1a 80     ...x...x........
 2001a90:	02 00 1a 88 02 00 1a 88 02 00 1a 90 02 00 1a 90     ................
 2001aa0:	02 00 1a 98 02 00 1a 98 02 00 1a a0 02 00 1a a0     ................
 2001ab0:	02 00 1a a8 02 00 1a a8 02 00 1a b0 02 00 1a b0     ................
 2001ac0:	02 00 1a b8 02 00 1a b8 02 00 1a c0 02 00 1a c0     ................
 2001ad0:	02 00 1a c8 02 00 1a c8 02 00 1a d0 02 00 1a d0     ................
 2001ae0:	02 00 1a d8 02 00 1a d8 02 00 1a e0 02 00 1a e0     ................
 2001af0:	02 00 1a e8 02 00 1a e8 02 00 1a f0 02 00 1a f0     ................
 2001b00:	02 00 1a f8 02 00 1a f8 02 00 1b 00 02 00 1b 00     ................
 2001b10:	02 00 1b 08 02 00 1b 08 02 00 1b 10 02 00 1b 10     ................
 2001b20:	02 00 1b 18 02 00 1b 18 02 00 1b 20 02 00 1b 20     ........... ... 
 2001b30:	02 00 1b 28 02 00 1b 28 02 00 1b 30 02 00 1b 30     ...(...(...0...0
 2001b40:	02 00 1b 38 02 00 1b 38 02 00 1b 40 02 00 1b 40     ...8...8...@...@
 2001b50:	02 00 1b 48 02 00 1b 48 02 00 1b 50 02 00 1b 50     ...H...H...P...P
 2001b60:	02 00 1b 58 02 00 1b 58 02 00 1b 60 02 00 1b 60     ...X...X...`...`
 2001b70:	02 00 1b 68 02 00 1b 68 02 00 1b 70 02 00 1b 70     ...h...h...p...p
 2001b80:	02 00 1b 78 02 00 1b 78 02 00 1b 80 02 00 1b 80     ...x...x........
 2001b90:	02 00 1b 88 02 00 1b 88 02 00 1b 90 02 00 1b 90     ................
 2001ba0:	02 00 1b 98 02 00 1b 98 02 00 1b a0 02 00 1b a0     ................
 2001bb0:	02 00 1b a8 02 00 1b a8 02 00 1b b0 02 00 1b b0     ................
 2001bc0:	02 00 1b b8 02 00 1b b8 02 00 1b c0 02 00 1b c0     ................
 2001bd0:	02 00 1b c8 02 00 1b c8 02 00 1b d0 02 00 1b d0     ................
 2001be0:	02 00 1b d8 02 00 1b d8 02 00 1b e0 02 00 1b e0     ................
 2001bf0:	02 00 1b e8 02 00 1b e8 02 00 1b f0 02 00 1b f0     ................
 2001c00:	02 00 1b f8 02 00 1b f8 02 00 1c 00 02 00 1c 00     ................
 2001c10:	02 00 1c 08 02 00 1c 08 02 00 1c 10 02 00 1c 10     ................
 2001c20:	02 00 1c 18 02 00 1c 18 02 00 1c 20 02 00 1c 20     ........... ... 
 2001c30:	02 00 1c 28 02 00 1c 28 02 00 1c 30 02 00 1c 30     ...(...(...0...0
 2001c40:	02 00 1c 38 02 00 1c 38 02 00 1c 40 02 00 1c 40     ...8...8...@...@
 2001c50:	02 00 1c 48 02 00 1c 48 02 00 1c 50 02 00 1c 50     ...H...H...P...P
 2001c60:	02 00 1c 58 02 00 1c 58 02 00 1c 60 02 00 1c 60     ...X...X...`...`
 2001c70:	02 00 1c 68 02 00 1c 68 02 00 1c 70 02 00 1c 70     ...h...h...p...p
 2001c80:	02 00 1c 78 02 00 1c 78 02 00 1c 80 02 00 1c 80     ...x...x........
 2001c90:	02 00 1c 88 02 00 1c 88 02 00 1c 90 02 00 1c 90     ................
 2001ca0:	02 00 1c 98 02 00 1c 98 02 00 1c a0 02 00 1c a0     ................
 2001cb0:	02 00 1c a8 02 00 1c a8 02 00 1c b0 02 00 1c b0     ................
 2001cc0:	02 00 1c b8 02 00 1c b8 02 00 1c c0 02 00 1c c0     ................
 2001cd0:	02 00 1c c8 02 00 1c c8 02 00 1c d0 02 00 1c d0     ................
 2001ce0:	02 00 1c d8 02 00 1c d8 02 00 1c e0 02 00 1c e0     ................
 2001cf0:	02 00 1c e8 02 00 1c e8 02 00 1c f0 02 00 1c f0     ................
 2001d00:	02 00 1c f8 02 00 1c f8 02 00 1d 00 02 00 1d 00     ................
 2001d10:	02 00 1d 08 02 00 1d 08 02 00 1d 10 02 00 1d 10     ................
 2001d20:	02 00 1d 18 02 00 1d 18 02 00 1d 20 02 00 1d 20     ........... ... 
 2001d30:	02 00 1d 28 02 00 1d 28 02 00 1d 30 02 00 1d 30     ...(...(...0...0
 2001d40:	02 00 1d 38 02 00 1d 38 02 00 1d 40 02 00 1d 40     ...8...8...@...@
 2001d50:	02 00 1d 48 02 00 1d 48 02 00 1d 50 02 00 1d 50     ...H...H...P...P
 2001d60:	02 00 1d 58 02 00 1d 58 02 00 1d 60 02 00 1d 60     ...X...X...`...`
 2001d70:	02 00 1d 68 02 00 1d 68 02 00 1d 70 02 00 1d 70     ...h...h...p...p
 2001d80:	02 00 1d 78 02 00 1d 78 02 00 1d 80 02 00 1d 80     ...x...x........
 2001d90:	02 00 1d 88 02 00 1d 88 02 00 1d 90 02 00 1d 90     ................
 2001da0:	02 00 1d 98 02 00 1d 98 02 00 1d a0 02 00 1d a0     ................
 2001db0:	02 00 1d a8 02 00 1d a8 02 00 1d b0 02 00 1d b0     ................
 2001dc0:	02 00 1d b8 02 00 1d b8 02 00 1d c0 02 00 1d c0     ................
 2001dd0:	02 00 1d c8 02 00 1d c8 02 00 1d d0 02 00 1d d0     ................
 2001de0:	02 00 1d d8 02 00 1d d8 02 00 1d e0 02 00 1d e0     ................
 2001df0:	02 00 1d e8 02 00 1d e8 02 00 1d f0 02 00 1d f0     ................
 2001e00:	02 00 1d f8 02 00 1d f8 02 00 1e 00 02 00 1e 00     ................
 2001e10:	02 00 1e 08 02 00 1e 08 02 00 1e 10 02 00 1e 10     ................

02001e20 <_impure_ptr>:
 2001e20:	02 00 1e 24                                         ...$

02001e24 <impure_data>:
 2001e24:	00 00 00 00 02 00 21 10 02 00 21 7c 02 00 21 e8     ......!...!|..!.
	...
 2001ecc:	00 00 00 01 33 0e ab cd 12 34 e6 6d de ec 00 05     ....3....4.m....
 2001edc:	00 0b 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

02002254 <heap>:
 2002254:	02 08 22 dc                                         ..".

02002258 <environ>:
 2002258:	02 08 22 d4                                         ..".

0200225c <ptrs>:
	...

02082294 <__malloc_current_mallinfo>:
	...

020822bc <__malloc_max_total_mem>:
	...

020822c4 <__malloc_max_sbrked_mem>:
	...

020822cc <__malloc_top_pad>:
	...

020822d4 <__env>:
 20822d4:	00 00 00 00                                         ....

020822d8 <last_was_cr.2996>:
 20822d8:	00 00 00 00                                         ....
